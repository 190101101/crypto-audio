Throughout this course, you're going to become really familiar with how to work with rest APIs and web sockets. If you've never done so already, a lot of you would have done so already. I know a lot of you would have done the triangular arbitrage course as well, so you will be familiar with a lot of this. But nonetheless, it's very important that all of us, despite our experience in working with APIs, whether you're a beginner or super advanced, becomes familiar with the API that you're going to be working with. So obviously we're working with the Bybit APIs part of this course. Some of the folks here from the states, for example, or countries that, you know, unable to use Bybit, they might be using some kind of other exchange. So it's very, very, very important. And it doesn't matter what exchange you pick. It's very important that you read the API documentation. And you know, I'm somebody who doesn't actually enjoy reading. I actually like going and doing and implementing as fast as possible. It's just my nature. But the one thing I always do because I've learned that it costs you a lot more time in not reading than it does in just reading the documentation properly and thoroughly. So that doesn't mean you have to go through and read the documentation line by line, but you need to do a scan of, you know, what's in the documentation and what's the structure of the API in the documentation. And that's what we're going to go and do now. So let's just put in here, you know, Bybit API documentation. I spelled documentation wrong. Sorry. And you'll see here, where can I find, you know, the documentation for the Bybit API? You can just click on that and we're interested in this US dollar tether perpetual API documentation over here. So let's click on that. Why are we interested in this documentation? What? I'm going to head back over to Bybit and what I would say to you is you've got a number of different things you can trade on Bybit right now. I'm on derivatives, you know, us dollar, tether, perpetual. And we've discussed already in this course why we're using, you know, US dollar tether and why we're trading with those powers. And there's a lot of advantages to that. And so we're using, you know, us dollar tether perpetual, essentially futures contracts. And this is a way for us to go long and go short. That's why we're using that. But there's different, you know, markets this spot markets where you can trade crypto, etc. So you need to make sure you're in the right arena here. The arena we're playing on is, you know, USDC perpetual. So this is where we're going to play over here, first and foremost. So if we go back over here, in fact, I'm just going to rearrange my windows here quickly. If we go back over here to the API documentation, we are interested in that part. Now a lot of this documentation is exactly the same code for whether you're trading, you know, inverse futures. You can see up here, you know, perpetual spot, whatever you are trading up here, whatever documentation you need, a lot of the code is actually the same, but it's just important that you select the correct area. So there's a number of things here. You have, first of all, is the authentication, right? So you've got testnet or mainnet over here. And if you just scroll down, you can see that this documentation tells you exactly how to connect and you don't need to read all of it. If you don't want to, it's fine. I'd encourage you to, anyway, but you know you will be connecting. I'll be showing you exactly how to do that. You know, here in this course, but you need to authenticate. And the way to do that is actually, you know, using your API key and secret, but you don't need to authenticate to get market data. You only need to authenticate to get account data. So you might be saying to me, OK, well, what's the difference between the two? So if I go over here down to, you know, market data endpoints and for example, whenever you see this client that basically meets candlesticks, you can see the example of what it returns down here open, low, high, close. You know, these are candlesticks, and you can see there's a whole bunch of different things that you can return here in terms of market data. You'll see that there's no API key being used here at all. It just doesn't. It doesn't exist. So it's it's pretty straightforward to to connect to and use this. You're going to see I will walk you through this step by step, you know, as we get into the coding. So don't worry if this is all a bit alien to you right now, but this gives you an idea of all the market data endpoints. So when you're on an exchange and you're reading that API documentation, you want to go down, you know, and see what data can I get and what does it return? It's the first thing I do whenever I'm building something for arbitrage or analysis or statistics or whatever. Usually I'm using Python pretty much always, actually, unless sometimes JavaScript. But I'll be, you know, I'll be using this. I'll be reading through it and going, call, what data can I get? How far back can I go? And what can't I get for what I need? And how do I have to build what I need out of the data I can get? You know, it's just a very natural way of thinking that you build as you go along. So market data endpoints, basically you're getting price data. That's really what you're getting with market data and. Points are getting price data, that's what we're going to be using it for. You could get trade history, you can get the order book, we're going to be getting the order book. You can get candlesticks which will be using as well to help us calculate the Z score, etc.. So, you know, this market data is essentially going to be very, very handy for us. But to authenticate, you know, you need to or to access account data endpoints, you need to authenticate. So for example, let's say I want to place an order. This is under active orders, you know, place an active order. I would have to go here and I would have to go and place an active order. So I would need to put in my API key and my API secret in order to go and do that. And this actually tells you exactly how to do it right. It's got the Python library that we use here, which is private. You'll see us installing that, etc. And then you you basically write the code that they give you here. So, you know, a lot of this course, in a sense, is actually cheating because all I'm doing is taking code that already exists from documentation and showing you how to use it and then adding my logic for the bot to it. So you can have any trading idea if you get used to working with APIs and data, you can. Just as long as you know the basics of programming, you don't need this course. You can figure it out. And that's the really, really great thing. But you know, doing the course really helps you get there much quicker so that, you know, especially if you've never done anything like this before. So this is where you can access your account information, you know, cancel orders, place orders, check your positions. If you're not sure what all of this means, it really doesn't matter because we're going to be going through a lot of the terminology shortly on the actual Bybit exchange, but you can go ahead and, you know, just just browse all of the see what you can do. We'll be using set leverage. We'll be using my position a lot. I think there's one or two other things here we might be using. From the position perspective, we're not using conditional orders, but we're using active orders and positioning here, which is really handy. And here you can see you've got, you know, risk limits and funding and all of these interesting things that allow you to interact with anything you can do manually on Bybit or any exchange. It allows you to go and do here automatically. Now down. Here's the web socket information, right? So if you want to use a web socket, then this comes in really, really handy. And I'm going to be talking more about web sockets when we go and actually connect to one. But this is great because what it means is you just have like a constant stream of data coming to you and it's super fast and it really helps with speed of execution, etc. So we're going to be using a mixture between accessing the API through a web socket and accessing like the rest API here through, you know, calling data as and when we need it from these data points up here. So that's just, you know, some brief overview of the of the API in general. One thing I want you to please pay attention to here now on this, this part is very important. Is the addresses, right? So you have, you know, two two types of endpoints you can get so you can get to a public endpoint or a private endpoint. A public endpoint is market data right? That's where you don't need your API key and you don't need your API secret. As we saw earlier, a private endpoint is the opposite. It's when you do need that. So, you know, take a copy here or just, you know, take a note of exactly where this page is, et cetera, or keep it in your browser because we will be getting these addresses and pasting them into our code. Right. We will need these addresses and you can see here, you know, for the main net, these are the ones for main net and these are the ones for testnet. Sorry. These are the ones for testnet. And these ones down here are the ones for main. So we're not using the main net addresses, but I will be using them for the code because one of the things we're going to be building in is the ability to switch from test to production, right? So if your bot works, I don't want you having to rewrite everything. I'm building this so you can literally change one word from test to production and everything should work in production. So that's, you know, that's what we're going to be building. You will need these addresses for that functionality to work, but you're not going to need it for testnet, right? You don't need these for testnet. So this is something very important that's going to help you as well. You know, just come down here to web socket data authentication. And once you do that, then you're going to get, you know, these web socket addresses over here when it comes to the authentication addresses, you know, for testnet and main net for the rest API, then you just use these ones here. So all I did to get this, I go to, you know, authentication at the top and here's the addresses for the normal rest API. If you're doing it for the web socket, then you need to go down here and use the web socket once. So there's two different API endpoints. Think of it as that you can create. One is when you're doing Web sockets, once this one is when you're doing rest API, the authentication, you know, access for web sockets is here and the authentication access for the rest API is up here. So I'm not going to spend hours and hours reading through your documentation for APIs because we're literally going to code it together. It's a waste of your time. So I just wanted to show you the broad overview of the API documentation for Bybit that in itself should have saved you a lot of time. And now let's get cracking.