İlk fonksiyon geliştirmemize hesaplamalarla başlayacağız, yürütmeye sağ tıklayıp burada yeni bir Python dosyası oluşturacağız ve bu fonk hesaplamalarını şöyle adlandıracağız. Ve sonra bu dosyanın içinde, birkaç tane içe aktarma işlemi yapmamız gerekecek. Aslında, yapılandırma yürütme API'sinden bir sürü şey içe aktaralım. Ve içe aktaracağımız ilk şey, stop loss failsafe olacak. Ve ithal edeceğimiz birkaç şey var. Öyleyse bunu çoğaltalım. Ve bu harika, çünkü buna ihtiyacımız olacak. Birinci satırın yuvarlamasını içe aktaralım. Birinci biletin miktar yuvarlamasını içe aktarmak için biletin yuvarlamasını da içe aktaralım ve ikinci biletin miktar yuvarlamasını içe aktaralım. Ayrıca ihtiyacımız olan diğer şey de Python'daki matematik kütüphanesi. Peki bu hesaplama dosyasıyla ne yapıyoruz? Bunun içinde gerçekten çok önemli bir işlevi olacak. İlk koyacağımız şey, sadece yakın fiyatları çıkarma yeteneğidir. Ve bunun nedeni, aslında buna benzer, bence tamamen aynı işlev. Daha önce strateji bölümünde kullandığımız şeye geri dönersek, ve bu o kadar küçük bir fonksiyon ki, aslında sadece gideceğim, muhtemelen buraya sıfırdan yazacağım çünkü çok, çok basit. Ve sonra burada kodlayacağımız bir sonraki fonksiyon, dediğimiz şeyi almak, ticaret detaylarını almak. Yani eğer düşünürseniz, bilirsiniz, bütçemizde, siparişten, kitaptan vb. miktar, fiyat, vb. bilgileri alma yeteneğine ihtiyacımız olacak. Ya da en azından sipariş defterini koymak ve anlamak için, bilirsiniz, hangi miktar, vb. için işlem yapmalıyım? Temelde bizim için bir sürü şey çözecek. Peki bunu buraya mı yazacağız? Bunun tam kalbinde olacak, ama her zaman kullanılacak. Ve burası da bildiğiniz yer, burada da oldukça zeki olabilirsiniz. Öyleyse devam edelim ve bu fonksiyonları çok hızlı bir şekilde kodlamaya başlayalım. Yani yapacağımız ilk şey, hadi kapanış fiyatlarını çıkaralım. Ve bunun yapacağı şey, basitçe tüm bu fiyatları sıralı bir listeye koyacak ya da ben sadece, bilirsiniz, liste diyeceğim, değil mi? Yani bu daha önce yaptığımızla tamamen aynı. Yani bu, fiyatları alan kapanış fiyatlarıdır. Ve bunu daha önce yaptık. Yani yine, ben sadece, bilirsin, bunu baştan sona okuyacağım. Yani bu fiyatlar boş bir listeye eşit olacak, fiyatlarda tam fiyat fiyat değerleri. Biliyor musun, aşağıdakileri yap? Ve bu olacak, eğer biliyorsanız, başka bir deyişle, bu hayır değil. Yöntem, fiyat değeri olmayan bir değer değildir ve bu, buraya getirdiğimiz yakın fiyat olacaktır. Boş bir liste döndür. Ve buna ihtiyaç duymamızın nedeni, bu arada, merak ediyorsanız, hatırlayın, Z puanının gerçekte ne olduğunu bulabilmemiz için yakın fiyatları almak için buna ihtiyacımız vardı. Ve sonra burada yakın fiyatların eklenmediğini söyleyeceğiz. Ve bu, bilirsiniz, fiyat değerleri olacaktır. Kapanış fiyatı olacak ve bu da o fiyatları geri getirecek. Yani bu yapılan ilk fonksiyon. Bir diğer önemli şey, buradaki fonksiyonların babası, alım satım detayları ve en son fiyatlar olacak. Dolayısıyla bu çok, çok önemli bir işlevdir. Bir dakika içinde burada bazı değişkenler ayarlayacağız, ama hadi fonksiyonu çağıralım. Buna ticaret detaylarını al diyeceğiz ve yapacağımız şey aslında sipariş defterine geçmek. Yani buraya bakarsanız, daha önce web soketinden yazdırdığımız sipariş defterine sahibiz.Esasen, bunu buna bağlayacağız ve sonra bu temelde bize neyi geri bağlayacağını bileceğini bilecek. Temel olarak bizim için yararlı bilgileri çıkaracaktır. Bu yüzden onların yönü uzun olacak. Kısa olduğunu söylemedikçe, bunu temelde çok uzun olarak varsayılan yapacağız. Aksi takdirde sermayemiz de sıfıra düşecek çünkü sermaye koymak isteyebileceğimiz zamanlar vs. var. Ve sonra burada diyeceğiz ki, bilirsiniz, hesaplama ve çıktı değişkenlerini ayarlayın, değil mi? Yani ihtiyacımız olacak birkaç şey var. Yuvarlamaya ihtiyacımız olacak. Bu yüzden buna fiyat yuvarlama diyeceğiz ve bunu 220'ye koyacağım. Varsayılan olarak 220'ye ayarlayacağım. Bunu düşünmem gerekiyor. Aslında, şimdi 24 olarak bırakacağız ve ardından miktar yuvarlaması yapacağız. Ve bu sadece ona bir tür değer atanması için, ama 20 olmayacak. Yukarıda kurduğumuz yuvarlama olacak. Burada olabiliriz. Buna ihtiyacımız bile olmayabilir. Orta fiyat sıfıra eşit olacak çünkü orta fiyat ürettiğimiz bir şey olacak, miktar sıfıra eşit olacak çünkü yine, bu bizim üreteceğimiz bir şey. Durdurma kaybı sıfıra eşit olacak. Ve teklif kalemleri listesi boş bir listeye eşit olacak. Üzgünüm Gladys, bunu böyle yap ve bunu çoğalt, biz de buna soru listesi diyeceğiz. Yani buradaki bu değişkenler, bilirsiniz, üçgen arbitraj kursuna benzer şekilde, onları yazın. Ve şimdi onları kullanmak üzereyiz ve gerçekte nasıl uyduklarını göreceksiniz. Yani bu bir düşünce. Ve doğru diyor, fiyatları al, fiyatları al, zararı ve miktarı durdur, bence bundan kurtulmak isteyeceğimiz şey bu. Bir de 'Bakın bir emir varsa kitap' deriz, değil mi? Yani sipariş defteri varsa, aşağıdakileri yapın. Bu yüzden fiyat yuvarlamasını ayarlayın. İlk şey bu. Fiyat yuvarlamasını ayarlayın. Bu sadece fiyat yuvarlamamız olduğundan emin olmak içindir. Doğru. Yani fiyat yuvarlama biletin yuvarlanmasına eşit olacak. Eğer sipariş, sipariş defterindeki ilk maddeyi oluşturuyorsa, dizide karşılaşacağınız ilk madde basittir. Yani bu, orada bir tane daha almak için eşittir sembolü olacak. Yuvarlama, bilet yuvarlama olacaktır. Bu nedenle, tüm bu işlevler için fiyat yuvarlamasının ne olması gerektiğini belirlemeye çalışıyoruz ve tarihleri eklemeye başladığımızda bildikleriniz mantıklı olacak, o zaman bunların nasıl ilişkili olduğunu göreceksiniz. Ama şimdilik, tamamen takip etmiyorsanız, kesinlikle sorun değil. Aslında oldukça normaldir. Yani burada miktar yuvarlaması var ve ben buna, bilirsiniz, bir'in miktar yuvarlaması diyeceğim. Ve eğer sipariş defteri sıfır sembolü tekrar bir taneye gidecekse, bilirsiniz, bu miktar yuvarlama bileti olmalı ve bu bizim için yuvarlamayı ayarlayacaktır. Çok basit. Aslında bunları buraya koymamıza bile gerek yoktu. Biliyorsun, istersek bunları buraya sıfır olarak koyabiliriz, ama bu sadece, bilirsin, bu geçmiş işe yaramadıysa bir tür yuvarlama elde edebiliriz. Ve sonra fiyatlar açısından, burada yapacağımız şey, organize olacağız. Temel olarak, fiyatları düzenleyeceğiz ve böylece her seviye için, çünkü emir defteri farklı seviyelere sahip, yani emir defterindeki her seviye için, yapmak istediğimiz şey, seviye olup olmadığını söylemek istiyoruz. Seviyenin tarafı, böylece onun tarafının satın aldığını veya tarafının satıldığını görebilirsiniz. Düzey tarafı eşitse, o zaman yapmak istediğimiz şey bunu teklif öğeleri listesine doğru uygun öğeler listesine eklemektir. Ve bunu yapmamın nedeni, bu arada, organize ediyorum, temelde, teklif fiyatlarını bir liste halinde ve satış fiyatlarını bir liste halinde organize ediyorum. Ve sonra yapacağımız şey bunları daha sonra sıralamak çünkü aslında Bybit'in API'siyle fark ettim, tam olarak beklediğim gibi gelmediler. Bu yüzden, burada göreceğiniz gibi, fiyat sırasına göre sıralandığından emin olmak istedim. Bu yüzden, bilirsiniz, buradaki sipariş defterimize gidersem, fiyatların bir düzen içinde olmasını bekliyorum. Tüm bu fiyatların artan sırada arttığını fark edeceksiniz. İstekleriniz var ve teklifleriniz var ve ben de bilirsiniz, en iyi teklifi ve en iyi teklifi veya en son teklifi almaya çalışıyorum. En yakın talep ve en yakın teklife gidelim, değil mi? Biz de bunu yapmaya çalışıyoruz. Yani burada bu, esasen bunu yapmamıza izin veriyor. Bu yüzden buna ekleyeceğiz ve bunun bir sayı olduğundan emin olacağız.Bu yüzden, bu seviye fiyatı bir şamandıra olarak koyuyoruz. Sağa doğru kaydırmaya devam edersem, burada her seviyenin fiyatını görebilirsiniz. Bunların hepsi düzenin seviyeleridir. Aynı bilgi fiyatını tekrar ayırtın. Bir nokta altı Fiyat bir nokta beş. Gördüğünüz gibi, gelen veriler, hepsi sadece seviyeler. Yani orada yaptığımız şey bu, ama bitmemiş olabilir. Yani başka bir deyişle, eğer satın almıyorsa, ürün listesini sorun. Ekleme. O zamandan beri, soru öğelerine eklemek istiyoruz. Ve şimdi yapacağımız şey, aslında bunu kopyalamak. Ve işte gidiyorsun. Şimdi bu, tüm fiyatları, bilirsiniz, satış fiyatları listesinde düzenleyecek. Ve sonra ne yapacağız? Fiyatı, büyüklüğü, zararı durdur ve ortalama likiditeyi hesaplayacak mıyız? Ve bu, planlama bölümümüzde açıklandığı gibi limit emirler vermek istediğimiz yer için çok faydalı olacak. Yani, talep edilenler listesinin uzunluğu sıfırdan büyükse ve talep edilen öğelerin uzunluğu üzgünüm, olması gereken büyük öğeler listesi sıfırdan büyükse, o zaman burada yapmak istediğimiz şey budur. Yani listeleri sıralamak, yazmak, söylemek istiyoruz. Bu yüzden listeyi sıralayacağız. Öğeleri sor diyeceğiz. Bu nokta sıralama python'un bunun için gerçekten güzel bir işlevi var. Bu, kaynak yapacağımız teklif öğeleri listesini zaten yaptı. Ve yine, bu sadece sayıların doğru sırada olduğundan emin olmak için ve sonra teklif öğeleri, bilirsiniz, her listenin başlangıcının en iyisi olduğundan emin olmak istiyoruz. Öyleyse ne yapacağız çünkü ilk maddeyi mi alacağız? Listedeki liste en yakın öğe olarak mı? Şu anda, tekliflerdeki en yakın öğe aslında listedeki son öğe, burada platformda değil, ancak Python listesi açısından son öğedir. Yani burada yapmak istediğim şey, aynı bit öğeleri listesini almak ve sırayı tersine çevirmek istiyorum. Bunun sırasını tersine çevirin. Al işte ozaman, buyur. Şimdi, en iyi fiyatı aldığımızı bilerek, her listenin ilk maddesini rahatlıkla alabiliriz. Yani burada en yakına sor diyeceğiz. Ve bu ve ayrıca en yakın teklif ve sipariş defteri yayılması. Yani bu temelde elde edeceğimiz yayılma o kadar fazla değil. Ama bu, spread'in orta fiyat almasını istemeniz durumunda, bilirsiniz, bir limit emri verirken, tam olarak yerleştirmek istemediğinize, bilirsiniz, teklifi satın almaya karar verebilirsiniz. Temel olarak, bir limit emriyle satın almaya çalışıyorsanız, teklife limit emri verebilirsiniz. Doğru. Bir limit emriyle satmak istiyorsanız, bunu talep üzerine koyabilirsiniz, ancak aynı zamanda ikisinin arasına veya herhangi bir yere, ikisinin arasında herhangi bir yere yerleştirebilirsiniz, gerçekten. Yani, bilirsiniz, bu size bağlıdır ve onu nereye yerleştireceğiniz, siparişinizin dolup dolmayacağını veya siparişinizin dolma olasılığını artırıp azaltmayacağına karar verecektir. Doğru. Böylece sana bırakacağım. Ama ilerledikçe size bazı fikirler vereceğim çünkü çeşitli şeyler denedim. Yani burada şunu söyleyeceğim, eğer ask öğeleri listesinin uzunluğu. Oh, üzgünüm, aslında burada yapmak istediğim şey bu değil. Burada yapmak istediğim şey, en yakın, en yakın olanın almak istediğim şey Ask Öğeleri listesine eşit olup olmadığını ve ilk öğe olup olmadığını söylemek istedim. Üzgünüm, bunu zaten yaptığımızı sanıyordum. I. Bunun hakkında konuştum, ama aslında yapmadım. Ve sonra en yakın teklif, teklif kalemleri listesinin sıfırına eşit olacaktır. Ve sıfır olmasının nedeni, bu listeyi tersine çevirmemizdir, bu yüzden bize o gerçek listedeki ilk öğeyi bizim için verecektir. Bu çok yardımcı oluyor. Şimdi yapmak istediğim şey, hadi buraya inelim ve bir sabit stop loss hesaplayalım, değil mi? Bu yüzden bir sabit durdurma kaybı hesaplayın. Başka bir deyişle, bilirsiniz, buradaki korumamız gibi. İçeri girmek istiyoruz, bu yüzden korunduğumuzdan emin olmak istiyoruz. Yani bu fonksiyona geçtiğimiz yön long'a eşitse, ki bu varsayılan olarak kısa olduğunu söylemedikçe, orta fiyat en yakın teklife eşit olacaktır. Tamam. Ve şimdi stop loss, mutlaka orta fiyat değil, değil mi? Burada söylediğim şey, burada yaptığım orta fiyat, aslında teklif artı talebin ikiye bölünmesi arasındaki fark olacak. Yani gerçekten, gerçek orta fiyatı istiyorsanız ne yapabilirsiniz, en yakın talep artı en yakın teklifi söyleyebilirsiniz, değil mi? Ve bu iki şeyi al ve ikiye böl. Bunu yapabilirsin. Bu size orta bir fiyat verir. Buradaki yönüm neden iyi görünmüyor? Yönü yukarı kaydırmama izin verin çünkü yönü buradan heceledim. Bu daha iyi. Öyleyse kurtaralım. Yani size orta fiyatı verecek olan şey bu. Ama aslında, bazen şunu fark ettim ki, örneğin bitcoin ticareti yapıyorsam, orta bir fiyat elde etmek o kadar zor ki, çoğu zaman sipariş iptal olur, gerçekleşmez.Öğrendiğim şey, eğer onu sadece teklif fiyatına koyarsam, örneğin, gitmem iyi olur, onu yerleştirir. Ve bu, doldurulma olasılığının daha yüksek olduğu anlamına gelmez. Ama en azından bu, yerleştirilme olasılığının daha yüksek olduğu anlamına geliyor. Şimdilik, aslında siparişi vereceğimiz fiyatı temsil eden orta fiyat diyeceğim. Bu yüzden buna orta fiyat diyeceğim, ama değil. İsterseniz buna sipariş fiyatı diyebilirsiniz. Bu kesinlikle iyi. Ben buna orta fiyatlı diyeceğim, çünkü bunu, bilirsiniz, teklifteki talep ile tercihinize ve stratejinize bağlı olan arasında herhangi bir yerde olacak şekilde değiştirebilirsiniz, değil mi? Bu şu anda kesin bir bilim değil çünkü farklı şeyleri test etmeniz ve ticaret yaptığınız çiftler için neyin daha iyi çalıştığını görmeniz gerekiyor, vb. Ve aslında, bilirsiniz, buraya bir not bırakacağım, sadece şunu söylemeniz için, bilirsiniz, bir teklif vermek ve sadece tutarlılık için, bunu şöyle koyacağım. Bu nedenle, bir teklif vermenin iptal edilmeme olasılığı yüksektir, ancak, bilirsiniz, doldurmayabilir. Yani burada orta fiyat dediğim emir fiyatını bit fiyatına yerleştirerek risk bu. Ve bu, bilirsiniz, sadece bir not olacak. Bunu senin için ekleyeceğim. Ve sonra zararı durdur temelde şunu söyleyeceğimiz şeye eşit olacak, hadi bunu yuvarlayalım çünkü şeyleri orta fiyat ile çarpı bir eksi zararı durdurma hatası etrafında yuvarlamamız gerekiyor, değil mi? Bu yüzden, zararı durdur desek, size bu zararı durdur failsafe'i gösterirsem, 15'i koyduk. Bu arada, kontrolüm vardı ve tıklama veya komut ve tıklama bana yüzde 15'i aldı. O zaman, bilirsin, fiyatı yüzde yetmiş beşten istiyorum. Şimdi, bu nedir? Mevcut fiyatın yüzde seksen beşi mi? Yani bir eksi sıfır puan bir beş bana verecek, pardon, yüzde seksen beş, değil mi? Yani orada yaptığı şey bu. Hesaplarımıza geri dönelim. Yani bu çıkar ya da fiyat ya da orta fiyat ve onu böyle çarpacak. Ve sonra burada belirlediğimiz fiyat yuvarlamasına dayanarak yuvarlamak istiyorum. Çünkü doğru yuvarlama yapmazsak fiyatı tanımayacak ve siparişi reddedecektir. Çok önemli. Ve sonra burada başka bir deyişle, eğer kusura bakmayın, eğer bu bir kısa pozisyon ise, o zaman orta fiyat en yakın satış olacaktır. Ve bu yüzden bunu buraya kopyalayacağım. Bunu buraya yapıştırın, en yakın satış fiyatı olacak ve bu camiye yerleştirilecek ve stop loss tam olarak olacak. Temelde, tamamen aynı olacak, değil mi? Yani ironik olarak, buradaki if fonksiyonunda stop loss'a gerçekten ihtiyacımız yok. Zararı durdurmayı buraya koyabilirdim çünkü zaten orta fiyatımız var. Yani aslında, istersem yapabileceğim şey onu çıkarmak. Ama bunu böyle bırakacağım çünkü burası orta fiyatın belirlendiği yer ve biz de böyle tutacağız. Ve son olarak, yapmamız gereken miktarı hesaplamak, değil mi? Yani bu, yuvarlamaya eşit olacak bir miktar olacak çünkü miktarı yuvarlamamız gerekiyor. Aksi takdirde, yine, bu işleve koyduğumuz sermayemiz ne olursa olsun, emri, kesintiyi reddedebilir. Ve bu, bilirsin, neye karar verdiğine bağlı olarak, bilirsin, bir kerede yüzde 100'ü yatırıyor ve bir piyasa emri mi veriyorsun yoksa aşamalar halinde bir limit emri mi yapıyorsun? Ve size her ikisini de nasıl yapacağınızı göstereceğim. Yani bu mantıklı olacak. Ama bu, orta-fiyata bölünen bir sermaye olacak ve bunu miktar yuvarlamasıyla sağa yuvarlayacağız. Bu nedenle ve bu bize miktarımızı verecek şimdi yuvarlak olmalı, neden yuvarlandığını bilmiyorum? Bu yuvarlak olmalı. Ve son olarak, yapmak istediğimiz sonuçların çıktısını almak, değil mi? Bu, bilirsiniz, çıktı sonuçları olacaktır ve bu, bilirsiniz, orta fiyatı, zararı durdurmayı ve miktarı temel olarak bir demet olarak döndürür. Ve burada yapacağımız şey, burada gördüğünüz gibi, bu devasa sipariş defterine bakacağız, bunu, bilirsiniz, aradığımız uzun veya kısa pozisyon için olup olmadığını söyleyecektir. yer ve ne kadar sermaye bahse girmek istediğimiz. Ve bilirsiniz, bundan geçecek ve esasen doğru bir şekilde çalışacak, sipariş fiyatımızın ne olduğunu, zararı durdurmamızın ne olduğunu ve miktarımızın tam olarak bir siparişin verilebilmesi için ihtiyacımız olan şekilde yuvarlandığını ve biçimlendirildiğini çözecektir. Ve güzel olan şu ki, fiyatı doğrudan en son fiyattan alıyor, bize beslenen doğrudan web soketi aracılığıyla bize beslenecek. Ve bilirsiniz, biz en son gelenleri alıyoruz, en son teklifi alıyoruz, en iyiyi veya en yakını soruyoruz, ama hepsi bizim için biçimlendirilmiş ve organize edilmiş.Yani bu fonksiyon, bilirsiniz, neler olduğundan emin değilseniz, endişelenmeyin. Gittikçe takip edin, daha sonra kullanmaya başlayın. Ve hala bilmiyorsanız, bu kodun ne yaptığını gerçekten düşünmek için biraz zaman harcamanız gerekir, çünkü üzerinde çalışmanız gereken bilgide bir boşluk olma ihtimali yüksektir. Ya sipariş defterinin nasıl çalıştığını anlamak ve biraz gidip manuel olarak ticaret yapmak olacaktır. Sadece onu elde etmek için, onu asmak için. Ya da belki sen çok iyi anlıyorsun. Ve aslında yapmak istediğin şey değişiklik yapmak çünkü benim metodolojime katılmıyorsun ki bu arada, bu ticareti kişisel bir şey olarak yazmanı beklemiyorum. Kitabı geliştirirken deneme yanılma yöntemine dayalıydı, ancak benim için iyi olan buydu. Sizin için iyi çalışmayabilir ve sizin için semboller için iyi çalışmayabilir, ancak en azından ne yaptığını anlamanız gerekir, değil mi? Önemli olan bu. Çok iyi. Bunun uzun olduğunu biliyorum, ama fonksiyonlar üzerinde çalışmaya devam edeceğiz. Geçmemiz gereken bir numaramız var ve sonra her şeyi dolambaçlı bir şekilde bir araya getireceğiz, böylece her şey bir araya gelmeye ve anlamlı olmaya başlasın.