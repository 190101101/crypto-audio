Yani tüm bu fonksiyonlardaki yarım kalan işleri bağlamadan önce, başka bir deyişle, hepsini birbirine bağlamak için bir fonksiyon daha koyun. Yapmamız gereken bir tane daha düzgün fonksiyon yazmak. Ve o kadar sabırlısınız ki, şimdiye kadar çok yol kat ettiniz ve SportBild'i yaparken açık ara yolun çoğunu tamamladık. Çünkü artık tüm bu Lego parçalarını yarattığınıza göre, onları birbirine yapıştırmak çok kolay ve hızlı olacak. Ve bu fonksiyonların her birinin ne yaptığını anlamanız sizin için çok daha kolay olacak, çünkü artık fonksiyonları oluşturma mantığı yerine botun mantığını düşünmeye daha fazla zaman ayırabilirsiniz. Ama henüz orada değiliz. Burada oluşturmamız gereken bir fonksiyon var, bu şimdi tüm bu emirleri ve aktif pozisyonları vs. hesaba katacak. Neredeler, değil mi? Bu, kısmen doldurulmuş bir siparişimiz olduğu anlamına mı geliyor yoksa aktif olan bir sipariş var mı? Tekrar denememiz gereken bir şey var mı? Bir sorun vardı, vs. Ve bu yüzden, bunların durumunu kontrol edecek ve sonra temelde ne yapacağımızı çözecek bir fonksiyona ihtiyacımız var. Bilirsiniz, bir pozisyonun doldurulduğu zamanlar vardır ve sadece kısmen doldurulduğu zamanlar vardır. Ticaret tamamlandı, değil mi? Sermayenizin tamamını şimdi bu kripto para birimine veya hisse senedine ya da her neyse ona yatırdınız mı? Bu mantığı başka bir yerde kullanıyor olabilirsiniz, ama biliyorsunuz, değil mi? Bu mu? Dolu mu? Aktif mi? Kısmi dolgu mu? Tekrar denemeniz mi gerekiyor yoksa işlem tamamlandı mı? Ve böylece, sizin için tüm bunları çözebilmesi için bu mantığı birbirine bağlayacağız ve sonra doldurulması için başka bir limit emri vermesi gerekip gerekmediğini bileceğiz. hepsi limit emirlerini yönetmeye odaklandı. Limit emirleri uygulamaya koyduğunuzda, bunun iş miktarını önemli ölçüde artırdığını görebilirsiniz. Ama bence buna çok değer çünkü o indirimi alıyorsunuz. Peki ne yapmamız gerekiyor? Bu fonksiyonu oluşturabilmemiz için gidip burada yeni bir dosya oluşturmamız gerekiyor. Ve buna funk diyeceğiz ve aşağıdaki gibi bir sipariş incelemesi diyeceğiz. Ve burada bir sürü ithalat var. Az önce üzerinde çalıştığımız dosya olan funk pozisyon çağrılarından söyleyeceğim. Varolan sipariş sorgusunu içe aktaracağız ve bunu çoğaltacağız. Ayrıca açık pozisyonları içe aktaracağız ve ayrıca aktif pozisyonları içe aktaracağız. Ve aslında, bunlardan dördüncüsüne ihtiyacımız yok. Funk hesaplamalarından da ihtiyacımız olan şey. İthalat yapmamız, ticaret detaylarını almamız gerekiyor. Bu başka bir şey. Ve sonra bir tane daha içeri aktarma, ki bu tamamen config WC connect olacak ve W.S genel içe aktarımını da oraya aktaracağız, böylece bu web soketi. Yani bu mantıklı. Ve burada sadece sipariş kalemlerini kontrol edin diyeceğiz. Ve böylece bu, bilirsiniz, kesinlikle çek emri olacaktır. Yani buna bir emir geçirilecek. Geçeceğiz, geçeceğiz. Bir takım şeyler aslında geçecek olan ticker'da sırayla geçeceğiz, kalan sermayede geçecek, yönde geçecek ve yönü varsayılan olarak alacağız. aksini belirtmediğimiz sürece uzun olacaktır. Ve bu fonksiyonu tek seferde yazacağız. İlk olarak mevcut siparişi, sipariş defterini söyleyeceğiz ve bu, bilirsiniz, şimdi birçok kez yaptığımız bir şey olacak. Bu yüzden en son sipariş defterini alacağız, bu da, bilirsiniz, web soketi nokta genel özür dilerim web soketi genel Typekit getirmenin altını çizer. Ve buraya f dizimizi koyacağız ve f diyeceğiz ve bu, bilirsiniz, sipariş defteri ve seviye iki nokta alt çizgi - beş çünkü yirmi beş seviye DOT işareti var ve ben yapabilirdim sadece, bilirsiniz, bunu web soket bağlantısından kopyalayıp yapıştırabilirdim. Ama bu iyi. Beş nokta işaretine kadar altını çizmek için bu doğru sipariş defteri l'e sahip olduğumu düşünüyorum, değil mi? Mükemmel. Ve burada yapabileceğimiz bir sonraki şey, eğer istersen, orta fiyatı alabilirsin. Bunu bu kısım için yapmayacağım, ama siz gidip ticari detayları alabilirsiniz, böylece bunu şimdilik dışarıda bırakabilirsiniz. Bunu kullanmayacağım. Senin için yazacağım ama burada kullanmayacağım. Kullanmak için bir sebep göremiyorum. Yani, bilirsiniz, sipariş alın veya en geç orta, en son fiyatı alın. Şöyle diyelim ve ben buna orta fiyat diyeceğim. Buna sipariş fiyatı diyebilirsiniz, ne isterseniz. Alt çizgi. Alım satım ayrıntılarını almak için diğer iki öğeye ihtiyacım yok ve bu, az önce getirdiğiniz sipariş defterini içerecek. Bununla, ama muhtemelen onu kullanmayacağım. Ve sonra burada uzun açık pozisyon elde edeceğiz, ya da sadece uzun açık pozisyon dememeliyim demeliyim, sadece bunun gibi bir şey söylemeliyim, bilirsin, ticaret detaylarını al. Bu yüzden burada yapacağımız şeyin ticaret detaylarını almak olduğunu düşünüyorum. Ve bunu yapma şeklimiz, sipariş fiyatına ihtiyacım olmadığını söyleyeceğim. Sipariş miktarına ihtiyacım yok, ama aslında onları arayacağım, yine de, bilirsiniz, ne olur ne olmaz onları istersiniz. Yani sipariş fiyatı ve sipariş miktarı ve sipariş durumu tam anlamıyla son videoda bu. Bu yazdığımız fonksiyon tam olarak sorgu mevcut sıralamaya eşittir. Ve bu, sipariş kimliğinin numarası olacak ve yönü de geçeceğiz. Son fonksiyonda yönü kullandığımızı bile düşünmüyorum ama şimdilik sorun yok. Geçmekten zarar gelmez. Ve burada diyeceğiz, bilirsiniz, açık pozisyon alın ve bu aşağıdaki gibi olacak. Bu pozisyon, fiyat ve pozisyon miktarı olacaktır. Burada kullanacağımız miktar. Temel olarak, sipariş durumunu ve pozisyon miktarını kullanacağız. Aslında bu pozisyon fiyatına ihtiyacım yok ama siz isteyebilirsiniz. O yüzden yine de oraya dahil edeceğim. Ve bu, açık pozisyonlar elde etmeye eşit olacak ve bu, doğru hatırlıyorsam, alınan şerit ve yön olacak. Ve oradaki de bu. Ve sonra diğeri, aktif pozisyonu almak istiyoruz, değil mi? Peki aktif pozisyonlar var mı? Bunun gibi pozisyonlar ve aktif derdim, bu aktif emir fiyatı olur. Şimdi buna ihtiyacım olmayacak, ancak bu bilgiyi istemeniz durumunda bunu sizin için aktif bir sipariş miktarı olarak buraya koyuyorum. Ama burada aktif olma anlamında hiçbir şey kullanmayacağım. Bunları tam anlamıyla oraya koydum çünkü stratejiniz için, ne yapmaya çalışırsanız çalışın, bu bilgiyi isteyebilirsiniz ve artık ondan nasıl yararlanacağınızı biliyorsunuz. Ve işte başlıyoruz. Aktif pozisyonlar almak ve bileti geçmek için bir hak alın. Peki, inşa ettiğim tahta için doğru olarak ne kullanacağız? O sipariş defterine ihtiyacımız olacak. Burada sipariş durumuna ihtiyacım olacak. Pozisyon miktarına ihtiyacım olacak ve burada aktif pozisyonlarla ilgili hiçbir şeye ihtiyacım yok, ama bu kesinlikle iyi. Bunu isteyebilirsin. Yani burada gereken eylemi belirleyeceğiz, değil mi? Ve bu pozisyon dolu mu? Eğer öyleyse, o zaman daha fazla. Peki burada bahsettiğim mantık nedir? İlk şey, eğer bir pozisyon doluysa, bu ticaretin tamamlanmadığı anlamına gelir, değil mi? Bu, yerleştirdiğiniz pozisyonun dolu olduğu, ancak hala satın almak istediğiniz daha fazla pozisyonunuz olduğu anlamına gelir. Yani siparişimize geri dönersek, buradan rezervasyon yapın ve tamam, bilirsiniz, 50 adet koydum, ancak 150 tane daha alacağım. 50 pozisyonu doldu, ama hala istediğim 150 tane daha var, bilirsiniz, gidip port almak. Yani pozisyon yeni dolmuşsa, o zaman bilirsiniz, eylem daha fazladır. Peki dolu olup olmadığını nasıl anlarız? Pekala, sipariş durumu sağa eşitse, o zaman bu, bilirsiniz, bu pozisyon anlamına gelir, pozisyonun dolu olduğunu gösterir. Yani ne yapacağız, aslında, evet, sadece iade edeceğiz. Geri dönüş pozisyonu dolu diyeceğiz, bu kadar basit. Ve sonra, bilirsiniz, bu doldurulmuş pozisyondur. Ama ne olduğunu biliyorsan, pozisyonlar gerçekten tamamlanırsa ne olur? Peki ne yapacağız? Ticaret aslında tamamlandı. Yani yapacağım şey bunun üzerinde. Aslında aynı şeyi yapıştıracağım ve şunu söyleyeceğim, eğer ticaret tamamlandıysa, ilgileneceğimiz ilk şey bu. Daha fazla işlem yapmamız gerekiyor mu? Yani ticaret tamamlanırsa, emir vermeyi durduracağız. Sağ? Ve ticaretin tamamlanıp tamamlanmadığını nasıl bileceğiz, pozisyon miktarının temelde eşit olup olmadığını bileceğiz, ancak bu fonksiyona aktardığımız kalan sermayeden büyük veya ona eşit koyacağım . Başka bir deyişle, aradığımız sermaye enjeksiyonuyla eşleşirse. O zaman dolu, değil mi? Artık ihtiyacımız yok. Daha fazla sipariş vermemize gerek yok. Ve bunu ticaret tamamlandıkça iade edeceğiz ve ticaret tamamlandı. Yoksa buraya gelecek. Ve eğer pozisyon doluysa, o zaman pozisyonun dolu olduğunu bilirsiniz. Bu kadar basit. Yani bu yapabileceğimiz bir şey. Bunu yapabiliriz. Ve sonra yapmak istediğimiz şey daha fazla eylem belirlemek. Öyleyse yapalım. Buraya bir tane daha koyalım. Kararlı eylem ve bu, bilirsiniz, sipariş aktif mi? Yani ya da aktif hiçbir şey yapmayın ama henüz doldurulmadığı için hiçbir şey yapmayın. Biliyorsun, daha zeki olabilirsin. Peki, ne kadar süredir aktif? Bu yüzden iptal edin, ardından en son fiyattan tekrar sipariş vermeyi deneyin. Biliyorsun, burada her türlü şeyi yapabilirsin ama şimdilik basit tutacağız, değil mi? Hiçbir şey yapmayacağız. Yani sipariş durumu? Oh, pardon, aslında, bu aktif emirler için burada olacak şey, aktif kalemlerin şuna eşit olduğunu söyleyeceğiz. Ve buraya bir liste koyacağız. Bir öğenin yaratıldığını ve diğerinin yeni olduğunu söyleyeceğiz. Ve temel olarak, aktif öğeler veya söylemem gereken şey, sipariş durumu ya bu ya da bu ise, o zaman sipariş doldurulmuyor, değil mi? O zaman aktif olduğunu biliyoruz, sadece hiçbir şey yapmayın. Yani burada yapacağımız şey, sipariş durumunun aktif kalemlerde olup olmadığını söyleyeceğiz. Başka bir deyişle, durum şu ya da bu doğruysa, o zaman temel olarak hiçbir şey yapmamamızı sağlayan sipariş etkinliği olan bir şeye geri döneceğiz ve sonra bunu tekrar yapacağız. Yani buraya yerleştireceğimiz daha fazla çek var, değil mi? Başka bir eylem belirleyeceğiz. Kısmi aktif düzen diyeceğiz. Peki bu kısmi dolu bir sipariş mi ve bu kısmen dolu bir siparişse ne yapacağız? Hiçbir şey yapmayacağız. Tekrar dolmasını umut edeceğiz. Ama yine de, bu sinyalleri buraya koyuyorum çünkü sizin için yararlı olabilirler. Bunlardan birinin sonucuna göre farklı bir şey yapmaya karar verebilirsiniz. Yani burada diyeceğiz, bilirsiniz, sipariş durumu kısmen dolu ise ve bu, karşılığında kısmen doldurulmuşsa API'den tam olarak nasıl çıktığına bağlıdır ve buna sadece kısmi doldurma diyeceğiz ve bu bunu bizim için yapacak. Peki ya sipariş hiç başarılı olmazsa? Sağ. Yani bunlar temelde bir limit emri etrafında tüm bu senaryolarla geliyoruz ve limit emirleri karmaşık olabilir, değil mi? Bu, bilirsiniz, sipariş başarısız oldu. Tekrar deneyin. Yer siparişini tekrar deneyin. Sağ. Sipariş başarısız oldu. Siparişi tekrar vermeyi deneyin. Yani burada ayrıca bir öğe listesi oluşturacağız. Bunlara iptal öğeleri diyeceğiz ve bunlar aşağıdaki gibi iptale eşit olacak. Bu yüzden iptal ettik, reddedilecek ve bu yıl, bilirsiniz, bekleyen iptal olacak. Şimdi, bu arada, buradaki tüm bu kontrollerin sırası veya sırası önemlidir. Örneğin, işlemin tamamlanmasının üzerinde bir pozisyonu doldurmuş olsaydım, işlemin tamamlandığını asla bilemezdi. Bunu asla bilemez çünkü kontrol etmeden önce iade edecektir. Bu nedenle, bir ticaret en üstte tamamlanırsa, yani, tüm bu kontrolleri koyduğunuz sipariş konusunda dikkatli olun. Yani evet, sipariş durumunun şuna benzer öğeleri iptal etme durumunda olup olmadığını söyleyecektik. yukarıda ne yaptık, sonra geri dönün. Geri vereceğimiz şey tekrar denemek. İşte buyur. Burada çok basit kodlama. Tekrar ediyorum, şu anda bu işlevleri kontrol etmiyorum, değil mi? Doğru şekilde test edebilmek için onları takmaya çalışıyoruz. Çok ama çok basit, değil mi? Bunlar çok basit. Ve bunun bu kadar basit olmasının nedeni, burada, funk pozisyonu çağrılarımızda, tüm zor işleri yapmış olmamız, değil mi? Önemli bilgileri geri veriyoruz. Tüm Lego tuğlalarını inşa ederek hayat yarattık. Hayatı kendimiz için çok kolaylaştırdık artık bir siparişle durumun ne olduğunu bilelim. Ve sonra, duruma bağlı olarak, alması gerektiğini düşündüğünüz bir eylemi gerçekleştirebilir. Şimdi pano ile bunu nasıl inşa edeceğimi göreceksiniz çünkü gidip botu inşa etmeye başlamak üzereyiz. Bu, gidip bunu yapmaya hazırlanmak açısından yapmamız gereken bir şey daha. Ve bilirsiniz, bunu halledeceğiz ve gerçek bot kısmını oluşturmaya başlayacağız, bu sizin burada yaptığınız her şey kadar uzun sürmeyecek, tüm zor işi yaptınız, siz ' temellerini attık. Şimdi sadece, bilirsin, bunun üzerinden geçmemiz ve yanlış olabilecek her şeyi test etmemiz, test etmemiz ve test etmemiz ve düzeltmemiz gerekiyor, çünkü bildiğiniz gibi, programlamanın doğasında muhtemelen bir yerlerde bir sorun vardır. O halde gidip daha fazla veda etmeden bu işi bitirelim.