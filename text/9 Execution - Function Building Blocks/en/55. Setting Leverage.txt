Next round of functions we're going to create, we're going to call execution calls, so I'm going to create here another Python file, and we're going to call this funk and this will be execution calls. And what this is going to allow us to do is actually a number of things, but we need to get some imports into here first. So, you know, from our config execution API, we're going to import as usual, our session private. We're going to import here. And from that same file, we're also going to import power limit order basis. And from our config we've got, excuse me, web socket connect. We're also going to import the public website Coppice, a website web socket public. And we're also going to import here from func calculations. We're going to import get trade details. So these are all things we've already got. And the first function that we're going to build here in this file is going to be to set the leverage. And remember, this is to make sure that when you're here placing any orders that you're not doing what I've just done here for Matic, right? Right now, you can see Matic are placed on the cross, not isolated. And I did it a 10x leverage when really it should have been done at one. So that's very important. You can see, by the way, I didn't mean to do that. I was just trying to show, you know, the code. But look how easy it is to forget what leverage you're actually using. So that's very important. We need to make sure that we force the leverage, not just in case we forget to be exactly that's here. We're going to force it in and we're going to just do it based on the ticker. That's all we need. And what I'm going to do here is just put in a try. And in fact, I don't even need that. I'm going to put in here, you know, setting setting the leverage settings, the leverage. This is going to be very quick and easy. So this will be what we'll call leverage set. It's going to be equal to session private dot cross, isolated margin switch. And within that, that takes simple. And again, I just got that from the API, but that takes symbol, which will be the ticker and is isolated, which should look like this is isolated. So that's a Boolean value. So that needs to be true. And that's going to set it from cross to isolated by leverage. So by leverage is going to be equal to one and sell leverage is going to be equal to one as well. And that's it. That should actually just do it over there. And then I'm just going to say, you know, return and that's going to be returned and straightforward. So this is just going to be literally set leverage. And the ticker here is Matic USDC as an example. Now we're just testing this. I'm going to get rid of this chunk of code here. We're just testing it right now. But let's run that and make sure that that works if I hit run. And that's done if I go over here. Here I've got isolated here, I've got long hair, I've got short. And it's one X and here two X. I don't know why that's on to. That's because I made a mistake that should have been set to one. So let's run this. And it's saying, you know, isolated, not modified, and that's OK because it doesn't need to be modified because it's already done. You can see it. So this this literally here has not worked because the isolated is not being modified. So what I'm going to do here is I'm just going to put in a try, which is what I thought to do. Then I backed off, but I'm going to put in a try. And usually you should never put in a try. And except, you know, when you're doing coding like this, because if something doesn't work, you should program around that. So I should be saying, you know, first check if it's isolated and then do that. But this is just to speed up for the course, so you can make this more more robust if you wish to. So let's go and hit play again and try that again. And here you'll see it did nothing. But if I put this back to cross and confirm it like that and I hit play here again, you'll see now they both won X, and so there you go that will make sure that the defaults have been set, you know, the way we want them, so we can get rid of this cold here and we've got our function built and tested.