Now that we have essentially our metrics here for the Z-score and actually they are more the Z-score list or metrics, I'm going to change this here. Rather than saying calculate CO integration, I'm going to call this calculate metrics and here I'm just going to call this calculate metrics. You don't have to do that, but I'm going to. And here we are clearly don't need that labor anymore. So I'll just move that. But what we want to do now is essentially we want a function which will get our Z score right. So it will get the get the latency score essentially. And all I'm going to do is I'm going to put that down here at the bottom. So this will be, you know, get the latest C score. And so this is going to be, you know, def get latest Z score. As such, and we'll open and close the brackets there, and in fact, you know what? There's a whole bunch of imports we're going to need for this. So what I'm going to do because this is so key. Let me just cut this out for a second. We'll remove it. And let's add this here. We're going to add it as a new Python file, and I'm going to call it funk. It'll just be its own function in its own file. Funk gets this call, so let's do that here. That's puppeteer as we had before, but now it's in its own file. So sorry about that. So let's do some imports here. So from the config web socket connect, we're going to want to import W.S. public. That's one thing we're going to need from the funk calculations we're going to want to import, get trade details and from the funk price cause we want to go ahead and import. Get the latest clients. And from our config WC Connect, we want to import the subs public. And in fact, let's move that up at the top. And finally, from the funk Stutz folder that we created, let's import calculate metrics. So these are all the imports we're going to want for this year. And let's go ahead and build out the function. So get the latest asset order book prices and add dummy price for the latest. What am I going on about? So what are we going to do is we're going to fetch the order book for both assets. So, so essentially both tickers and what are we going to then do with those is we're going to replace the latest price on those with the latest price from the actual order book. So we're going to just make sure the latest data point is the latest per the order book and then return the Z score calculation on the back of that. So let's go ahead and type that out. So what are we going to do here? Is we going to say, you know, order book? And this time we're taking two of them. So we've got this order book one that would be web socket, public dot fetch, and that's going to essentially take in the subs public. First item from that subs public dictionary that we had and then we go or array that we had sorted list and then mid-price one. You could call that close price and I don't need the quantity or the stop loss, et cetera, or the stop loss and the quantity. So mid-price one comma underscore comma underscore comma is going to be equal to get trade details, and that is going to take into account order. Book one. All right. So that's going to get us the latest price from that order book. We've already done the hard work, so it's really easy now for us to get price information. That's what I love about programming and functions. Once you've done the hard work, it's all there. And here we're going to take this as well. Website could fetch. But this will be the second item in the array as follows. And then the mid-priced to which we're just going to copy from that is essentially the same thing, except it's getting it from order. Book two very straightforward. And then what we want to do is get the price history to add those latest prices to those. So let's get that. So let's just say, get latest, you know, price history clients and what we're going to do here. And it's not even the clients and uses clients get it, but it returns a series. So we're going to see Series one and Series two is equal to get, you know, latest clients. And we don't need to pass anything into that that will just get us, you know, series one or Series two. And if you don't believe me, let's actually go ahead and just run this here. So let's go and print series one so that you can see that actually happening. And Cole, I'll get later. See score here. So let's go ahead and run this here. And there you go. It's returned the latest prices for both tickers for us right over here, which is which is really cool, in fact, no, sorry for series one. It's returned that and if we want to test in our series too, we can do that and we can play again. And there you go. I'll leave the scene down here for now, but I'll remove it, you know, once we're done with what we're doing, so here now, what we're going to say is, you know, get sorry, get the Z score and confirm if Hunt's remember going back to our drawing over here or I'll plan, right? If something's hot. This is what kicks off, though. Hey, you need to place a trade, right? So let's go back there and get going with that. So if the length of Series one is greater than zero and the length of Series two is greater than zero, then what are we going to do right? Then what are we going to do? Is replace the last closing price with latest order book mid-price or close, you know, old order price, whatever you wanted to call that. And so here we go. Since Series one, let's do it as follows. So Series one is going to be equal to series one, but we want to exclude the last item from that now. So are we going to put minus one? It's going to take everything right from the start all the way to everything but the last one and the same thing for series two? Same thing. We're doing that. So everything but the last one, so that's going to be done, then series one don't depend. And this would be the mid-price one. And Series two depend. This would be the mid-priced two. So this is very handy. It's basically getting rid of the lost item and then adding one item on the end, which is what we calculated above here as being the latest mid-price. And this is where programming is just awesome, right? It's all pretty straightforward now. So get the latest C score, which would be good, and this would be the current flag over here, Co-WIN flag and then Z-score list. And in fact, it's the Z-score list we want. It's not the current flag. So I'm just going to put an underscore that because we don't even need that current flag, we don't need to know if it's going to create it or not, if you do. So let's talk about this. Actually, let's go back to calculate metrics. So remember, the calculate metrics are returning the CO integration flag in the Z score list. If it's important to you that the pairs are still co integrated in order for it to place a trade. You will want to make use of that Korean flag right now. I'm not. I'm going to manually decide when things are still coming integrated, how long I want to trade it for etc based on how I see it performing. But you might decide, no, no, it needs to be, you know, the right C score and co integration flag of one. In order for it to be considered hot. So I put that option in for you, but I'm not going to make use of the Korean flag. I want to be more sort of hands on with it. And so there we go. So that is going to, you know, allow us to calculate the metrics. But we have to actually put in Series one and Series two in order to go and to do that. And then what I'm going to do here is I'm going to say, look at the Z score itself. See, score is equal to the Z score list and it's going to be the latest item. So it's a lost item in that list, right? That's the Z score. If the Z score is greater than zero. In other words, if we got a Z score, that the signal sign or in fact, if it's not to do with whether we got something because it could be zero. But here it's to determine what the sign is. So is the sine positive. In other words, is it above zero? If it's greater than zero, then that must be true. Else the signal sign signal sign. Positive. In other words, is it positive? Must be false? And then what are we going to do here is after this here we're going to just say, you know, return return here, see score and signal sine positive. So this is going to be, you know, return output. And if that's not true, then what are we going to do is also return and output rights or to an output, if not true? And that that which is going to return nothing which is going to return. So let's go and print this out as well. Let's print out the Z score and whether the the signal sign is positive and see if that worked for us. Right. So right click and run. And we are hoping for a good result here. And there you go. It's given us the Z score, which is currently positive because it's above zero and the currency score is zero point six seven. So that's going to be our signal. Now we can get rid of that. We can get rid of this print statement, not the return statement, the print statement. And I think we were printing something else out here somewhere. So let me just see why that is. Let's go to get trade details. Is it happening there? I think we're getting too many printouts, so it's not happening there. Let's go and run this again. So I think actually what's going on over here is that we're connecting here to a web socket, but I'm not running this through a while. True. So you may have just tried running this and it didn't actually return anything for you. I think that's OK. I think I'm going to move on. For now, there might be something buggy going on here, but for the time being, I think it's because we don't have this running through a loop and I just got lucky on that time and it connected if I'm honest. So I'm going to correct the spelling of this over here. And the other thing I just want to check is, do we have any print statements as well? Because like I said, we do seem to be having a lot of print statements coming out there anyway when we did that. So let's go and see, you know, the get trade details. Is there anything being printed out here? It's nothing being printed there from what I can see. So we might have to do a little bit of debugging. Let's look at the get latest clients and there we go. That's why we're getting we're getting, you know, those extra rows of prices. We still have print statements in there which I'm going to go and remove. So now we've got rid of those we can carry on moving on. I don't think we're going to have a problem, but you know, just bear this bear this for now. Bear this in mind.