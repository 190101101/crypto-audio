We're going to create a function called plot trends, and what that function is going to enable us to do is to view some graphs and charts. And it's also going to save the data for us, or at least the data for two papers that we select to be plugged into a backtesting model. So that's what we're going to do now. We don't have to do this calculating of the CO integration anymore, and we don't need print done. So I'm just going to get rid of that and I'm just going to comment out this section here as well. So what what are we going to do now is we're actually going to go and create a step four, which is going to be, you know, plotting the trends. So this is going to be plot trends. And save backtesting, save for back testing, and the back testing again is actually going to be done in Excel because we also need to keep this course, you know, not too long. But it's also quite easy for people to navigate and manipulate checks and, you know, different criteria that they want to do in Excel. So we're going to do that in Excel. But the first thing that we need to do is actually create the function. So what I'm going to do here is under strategy, our strategy folder. I'm going to create a new Python file and I'm going to call this func plot trends. And away we go. So what are we going to do here is we're going to plot prices or trends trends. Same kind of thing. And here what we are going to say is death plot trends, and that's going to be we're going to take in simple one. We're going to take in simple two. And we're going to take in price data. As such, so that's going to be pretty important. But we also need to and we'll just put past here for now, because that'll get rid of the error. We also need to initiate actually calling this over here as well. So let's you know, it's printed, it's just print what we're doing. So plotting trends just like we did in the previous steps. And you know, it's simple. One is going to be whatever you decide, it's going to be. So for example, when I did this, I used Bitcoin Cash to USDC tea and send it to us. If we go back to our spreadsheet over here, I think we looked at, you know, magic as being an interesting one. So let's let's run it for that. That's going to be Medich and simple two is going to be. So I'm just grabbing this from our spreadsheet from before. So we just copy that and put that in there. So we're doing maddick against. That should be OK. So we'll try it for those ones first and then we need to also open the file so we can get the data from that. So we're going to say, you know, with OpenSea, nothing you haven't done before, and we're going to take it from the price, the JSON, priceless. We're going to, you know, from one price list Dot Jason say exactly as we did before, as JSON file. And then what we're going to do here is say, you know, price data is equal to Jason Dot Load, Jason File Jason on the school file as such. And if the as we'll say, if the length of the price data is greater than zero, of course, because we expect that this data, that then we're going to plot trends and we need to import that function we created here. So that symbol one, which you could have called SIM one, but here I've called it symbol one, symbol two and here price data. And so what we need to do up here is say, you know, from func plot, sorry, func plot trends, import and that was plot trends as such. And there we go. So now we're calling that plot trends function. If I hit command and click on that or control, click on that. It'll take me straight there. And that's, you know, that's very useful. So now what we need to do is actually build this out. Now there's a number of things that we need to import before we do that. So from our Func Co integration, and now you're starting to see what's so useful to separate these functions in their own files. It's so easy to reuse them. We can import, extract close prices, so that's something we're going to need. We're going to need func. Same thing again from func integration. In fact, I'm going to replicate that four times. We're going to import calculate co integration. We're going to import calculate spread and we're going to import also something which we will call calculate z score. But we don't have that yet. So actually good idea would be for us to go and go to that func integration file and put in a calculation here for Z Score. So bear with me a second. Let me just minimize that. So this would be calculate Z score. So that is something we're going to need over here as well, because we can't exactly, you know, plot the Z score unless we have it. And we're also going to be calculating the Z score again in, you know, in our execution. So this is something you'll get used to. So here we'll go calculate C score and we're putting in the spread over here, right? So that's what you need to calculate. The Z score on is the spread, and we're going to take a data frame that we're going to say that's going to be equal to pandas data frame spread. So we're just going to put the spread in a data frame basically, and we're going to calculate the average because these scores equal to the it uses the average and that's a rolling calculation. Going to say rolling center is equal to false window is equal to and now what we need is the Z score window, so we actually need to from our configuration. So I'll put that here at the top, actually from our configuration config strategy API, you know, import z score window, we set that almost as one of the very first videos. So Z-score window. And if you're wondering what that is, you can see it here. Z-score window is a period of 21. So we've got that over that. Then I'm going to duplicate that line and I'm going to say the standard deviation is equal to the same thing, except for both. These we need to say what it is, so the mean which is the average is going to be mean and the standard deviation here is going to be standard. And that gives us the standard deviation. And then we're just going to say X. In other words, X relates to the latest price is going to be equal to the data framed up rolling. And that's going to be again sends a false sense. It equals false and windows equals one. Don't mean. So that's just taking like the latest one item. That's essentially what it's doing there. And then we're going to add the Z score to a data frame. So we're going to call the C score. This is basically adding a column to the data frame, and that column is going to be the current value basically minus the average divided by the standard deviation. And that is the calculation for Z score. And then we're going to return that data frame as a list. So we're going to say, you know, take the Z score, which we need to put in speech marks if we're calling that column. As such and that we need that as numbers, rights are not, as, you know, string or anything, we just need to make sure it's coming through his numbers and take those numbers and put it into a list of actual values. So basically, that's just going to put the Z-score into a list for us, which will be school, busy, school, busy, sort of just busy school and it look like this. So essentially, you've got your list, your number for your school, your number for your Z-score, your number for your Z-score, although that number is going to be something like, you know, 1.1, you know, minus nine point sorry, minus one point twenty five. Those are really wasicsko numbers more or less looked like. So that's the school is going to come across this. So we've got to calculate C school so we can come back here and we can duplicate this and we can actually put calculate z score in here as well now, which is very, very handy. So the other thing we're going to need, I might as well import them now is we're going to need something called met plot lib. So let's go to our terminal here and we're going to put PIP install mat plot lib. And this is essentially just a charting library for Python. It's going to allow us to plot trends and graphs, and we're going to actually build those graphs here in this video, and it makes everything very straightforward. So that's going to be easy. So here we're going to say import met plot lib dot python pie plot as plot. That's the that's the abbreviation. We're also going to import pandas as p d. So those are our imports taken care of. We shouldn't need any more than that. And here down here, we're going to just say, you know, extract prices here. So that's going to be, you know, prices one. This could be the same as series one. Same thing we did earlier. This would be extract close prices and that would be price data some one. So that'll be some one and the same for prices to accept. This is going to be, you know, price data symbol, too. So that'll get our prices just like we did earlier. And here we're going to say it gets spread and Z-score, so same thing we did before. So this will be getting this spread and z score. So the integration flag, the P value, the T value, I could just copy it from before, but I'm going to type it out. The C value, the hedge ratio and the zero crossings we're going to, you know, I can put all of that stuff here is equal to calculate CO integration, and the CO integration is going to take our series, which we've called prices. So that will be priced as one. And prices, too, from our JSON file that we saved earlier on in the module. So that should get alco integration. And then I'll spread is going to be equal to calculate spread, which essentially is going to take in prices one in prices too. So I'll copy those there. But it's also going to take in the hedge ratio from here. And the Z score is very simply going to be calculate Z-score and it's going to take in this spread. So let's check this so far has all worked. So what I'm going to do here is just say Prince Z-score, and I'm going to run that. So let's hit play and see what breaks. Well, nothing broke. So so far, so good. Here's our ray of Z-score and you'll notice there's a lot of not a numbers here. That means that because Z Score uses a moving average, it can't go back into a data set it doesn't have in the past. The data has to end somewhere, and so it's trying to calculate moving averages on data. That's somewhere in the past. And that's fine. When we put it this in our back testing model, we're just going to delete those rows from an Excel spreadsheet, but that's looking really good. And I think, you know, let's crack on because we're getting some good momentum here. Now we're going to calculate, you know, the percentage changes. And the reason for that is and I'm going to use crypto as its to explain to you what we're doing because it's the only way I can think to do it is if you go to crypto is it's if you watch my screen, even you'll see that these are two prices compared to each other. Well, they are totally different price. So how do they fit on the same chart? Well, they fit on the same chart because we're looking at percentage change of two prices together. And so that's what we need to go and calculate here. So this data frame is going to be equal to pandas data because we need a data frame. And that's going to be, you know, columns for that data frame. So essentially what we're doing is we're taking our prices and putting them into a data frame and we're going to label the columns off to some one and we're going to label the other column as whatever simple two is so that we can see the title of, you know what those tickets or symbols actually are. The data frame for some one is the values for that are going to be equal to prices once all we're doing is taking our prices and essentially adding symbol one and symbol to there. So I've just duplicated that. And then down here, what I'm going to do is say right, the data frame, and I'm going to put in an f string so we can join text and variables together. We're going to say sim one sim one percent is equal to data frame SIM one. Divided by prices one. Zero. So what that's saying is take the latest item in the data frame and divide it by the very first one. And if you keep doing that for all of them, essentially what it does is it gives you your percentage change compared to the first day. And then when you add, you know, two prices together that do that, that can fit on the same chart unless one's percentage changes are like ridiculous, which very rarely happens. That only happens when you're looking at things like the S&P 500 versus bitcoin, because obviously bitcoin just moved so much more than the S&P. So, yeah, we're going to create the same thing, but for prices to so we change after prices. Too simple, too simple, too. And what's very important here is make sure that you're checking that you're putting ones and twos when you're duplicating things, because otherwise you can get the wrong answer and not even realize it for a period of time. And so here, what I'm going to do is I'm going to take series one. So this is going to be what we call Series one. And that's going to be equal to, you know, our data frame. And I'm just going to copy actually, I'm going to copy this here. It's going to be equal to that column as type as we want to make sure this is a float. So it's a no dot values. And the same here for series two. We want to do the same thing. Simple one. Simple two. And there you go. And then what do we want to do while we want to save the results for backtesting? So I'm going to take this over here. Copy that and relabel this. So here we're going to say save results for backtesting, because that's what we're going to do after we've started analyzing the charts and we're going to say data frame two. So I'm going to create a new date data frames called pandas data frame. So that's creating a blank data frame like again, like an Excel spreadsheet, but in Python and then data frame to symbol some one, some one is equal to, you know, prices one so same thing as we did before. We're going to do pretty much all the same stuff again, but not quite so this will be simple to is equal to prices two. And then what we want to do, I'm just going to duplicate that twice. We want to call this spread as such, and that's going to be equal to the spread and we want to call this score. As such, the score. And that's going to be equal to the Z score. It's a very straightforward. And then we're going to, you know, send this to excel. So it's similar to what we've done before thought we're going to say to CSV. So we save it as a CSV file and we're going to label this file as number three. So this will be the third file, you know, in our strategy folder doc test file C as V. And that's what we're doing there and we're going to actually print out to let us know that that saves that file for backtesting saved, which is great. Now the exciting part that I think you're going to really enjoy, I love charts are like looking at charts and stuff. It's lots of fun. So here what I'm going to do is I'm going to say no plot charts, and we'll type this out quick because it really won't take us very long. And then in the next video, we're actually going to run it and tested and view the charts. So that's very exciting. So let's take our figure. We're going to create a figure and an axis, and that's going to be equal to plus which we imported above dot subplots because I want multiple charts to look at just like we have on crypto visits and I'm going to put a fig size. This is just to size the image, and I want to, you know, it's like with 16 and eight, I think that's inches it works in. Can't quite remember, but it looked good before to me. And the only thing I don't understand here is I put a dot that should be a comma that looks better. And the other thing I want is a fig dot subtitle. Let's just put it here, subtitle and that is going to be here. F. Price and spread. And then that is going to be, you know, some one. So we understand what some one is versus, you know, some to. And so that's just going to help us to. And by the way, this is subtitled, not subtitle. So just make sure you put subtitle simple one versus symbol to the axis zero. Yeah. So the first one is going to be a plot of series one, but it's also going to have Series two, so I'm going to duplicate that. And the reason for that is if I look here, I want the series once a set of prices for one ticker or symbol versus the symbol prices for the other. So I'm going to put them both on this zero axis here. You'll see what this relates to in a moment. And then here again, we're going to do another plot, but this is going to be a new chart. So it's a new subplot and that's going to be, you know, the spread. And then we're going to do even another one here. And that is going to be the Z-score as such. And then we're going to show the charts now. Hopefully, we've got everything right. We might not have, but we shall find out in the next video. I know this was a long one. We went through a lot of just coding, but a lot of this stuff you've kind of now seen, except for this plotting area. Now it's just a case of writing the code and viewing the chart. So I'll see you over there shortly.