Artık sembollerimizi elde ettiğimize göre, aslında bu sembolleri almamız ve bunun için fiyat geçmişini almamız gereken ikinci adıma geçelim. Yani burada, fiyat geçmişini oluşturan ve kaydeden Typekit'i kurup özür dileyecek miyiz? Ve bu aslında aynı şey olacak, ama biz sadece sembolleri gerçekten geri aldığımızdan emin olmak istiyoruz, evet, eğer o sembolün uzunluğu yanıt verirse, daha önce yaptığımızın sıfırdan büyük olduğunu söyleyeceğiz, yani. orada bir sorun olmadığından emin olmak için rekor mağaza fiyat geçmişi oluşturacak bir işleve geçebiliriz. Ve normalde, gitmeden önce işlevi yaratır ve böyle çağırırdım. Ama bu sadece yaptığımız şeyle ilgili planımızın yanı sıra mantığı takip edebilmeniz için. Ve basit cevabımızı ileteceğiz. Bunları bir mağaza fiyat geçmişine aktaracak mıyız ve burada döndürülen hiçbir değişken olmadığını fark edeceksiniz? Ve bunun nedeni, buna ihtiyacımız yok. Bunu adım adım yaptığımızdan emin olacağım, böylece bu bilgiler kaydedilir, böylece onu tekrar ve tekrar çalıştırmaya devam etmek zorunda kalmazsınız. Bir değişiklik yaptığınızda yapmanız gerekenleri yorumlayabilir ve yorumunuzu kaldırabilirsiniz ve bu bizim için gelişmeyi önemli ölçüde hızlandıracaktır. Bu yüzden sadece bunu yapacağız. Ve bu mantıklı. Yani yapmamız gereken bir sonraki şey, yine de, işlevsel bir fiyat yaratmak. Jason, buna dosya diyeceğim. Yeni Python dosyası stratejisi üzerinde hakkı var ve bu başka bir işlev olacak. Ayrıca, bir fonksiyon içerecek ve ben bu func alt çizgi fiyatları alt çizgi Jason Python dosyası olarak adlandıracağım. Ve Jason'ı söylememin nedeni muhtemelen bu bilgiyi saklamamızdır. Aslında, mantıklıysa, bu bilgiyi bir Jason dosyası olarak saklayacağız. Yani burada yapacağım ilk şey, sadece bir yorum oluşturacağım ve şunu söyleyeceğim, doğru, bu fiyat geçmişini saklamak olacak. Mevcut tüm çiftler için ve ben buna, bilirsiniz, def mağaza fiyat geçmişi diyeceğim. Böyle ve şimdilik, burada yapacağım şey, sadece pas vereceğim ve o dönemin ortadan kalktığından emin olacağım ve burada funk fiyatlarından, ithal mağaza fiyat geçmişinden bahsedeceğim ve bu o dönemden kurtulmak gerekir. Şimdi, bunu yapmak için şimdi bu işlevi bu şekilde doldurmaya hazırız. Esasen fiyat düşüşlerini veya şamdanları elde etmek için başka bir fonksiyona ihtiyacımız var. Yani burada başka bir klasör oluşturacağım ve buna funk diyeceğim. Fiyat. Klein'ın. Böyle ve orada o dosyanın içinde. Şimdi, bilirsiniz, aslında veri çekmeye ve bu fiyat geçmişini çekme işlevimizi yaratmaya başlamamız gerekiyor, vb. Bu yüzden, bunu devam ettirmek için burada epeyce iş yapacağız. Yani yapmak istediğim ilk şey, bilirsin, bunu hızlıca belgelemek ya da aralık seçeneklerinin ne olduğunu bana hatırlatmak için çok hızlı bir şekilde belge notları oluşturmak. Yani ilk şey, şamdan fiyat geçmişini çıkarırken, bilirsiniz, bu seçeneklerin ne olduğunu bilmemiz gerekiyor. Yani ilk şey 60 olacak ve diğeri gün olacak çünkü unutmayın, bunlar nokta için izin vermekle ilgilendiğimiz iki zaman aralığı. Tabii ki, isterseniz gidip bunu değiştirebilirsiniz, ancak şimdilik sadece bu prensibi izleyeceğiz. Ve bu, bilirsiniz, saniye cinsinden zaman damgasındaki tam sayı olacak. from bu yüzden olacak. Ve sonra sınırları hatırla. En fazla 200 beden vardır.Bu notları buraya koyuyorum çünkü geliştirme aşamasındayken herhangi bir sorunla karşılaşırsanız size hatırlatmak için çok faydalılar, tam karşınızdalar. Şimdi Yapılandırma Stratejisi API'mizden içe aktarabilmemiz için bazı şeyler girmemiz gerekiyor. Elbette verilere erişebilmemiz için oturumu içe aktarmamız gerekiyor. Ve yine aynı şey, ancak oturumu içe aktarmayacağız. Zaman çerçevesini içe aktarmak istiyorum. Ayrıca, daha önce sahip olduğumuz düşüş limitini de içe aktarmak istiyorum. Şu anda zaman damgalarıyla çalıştığımız için ihtiyaç duyacağımız diğer şey, Python'dan tarih ve saati içe aktarmak ve aynı zamanda zamanı da içe aktarmak istiyorum. Yani bunlar önemli olacak. Ve şimdi yapmamız gereken şey. Yani gidip API'nin kendisine bakarsak, buraya, oradaki API'mize gideriz. Tüm bunlardan kurtulalım. Piyasa veri uç noktalarına gidelim. Örneğin, burada esasen pazar fiyatı düşüşünü sorgulayacağız, eğer mantıklıysa. Burası nereye gideceğiz ve fiyat bilgisini, tarihsel fiyat bilgisini alacağız, eğer bu yıl yapıyorsak, altmış kullanacağımız bir intervalimiz var. Artık isterseniz gün kullanabilir ve sınırlayabilirsiniz. Bunu yapacaksak, hangi zaman damgasını saniye cinsinden girmemiz gerekiyor. Öyleyse geri dönelim ve aslında o zaman damgasını oluşturalım, bilirsiniz, burada kodlayın. Yani burada yapacağım ilk şey, bilirsiniz, başlangıç zamanlarını ve başlangıç zamanlarını almak. Başlangıç tarihi sıfıra eşittir. Ve eğer zaman çerçevesini söyleyeceğiz. Yani zaman çerçevesi 60'a eşittir, o zaman başlangıç tarihimiz tarih saatine, başlangıç tarihi saatine eşit olacaktır. Yani şimdi gündüz vakti içindeki verilere erişiyoruz ve gündüz saatini gün saatinden çıkaracağız ve tarih saatinden önemli bir gündüz vaktim olabilir. O zaman bunu iki kez yapmak zorunda kalmazdım. Üzgünüm, bundan kurtulalım Delta gündüz konuşma saatinde. Ve bu, geçerli tarih saatinden bu yana kaç gün, saat, dakika vb.'nin değiştiğini gösterir. Yani burada, tırmanma limitlerine eşit olan saatleri koyacağım. Ve bu bana bunu verecek. Diğeri ise if ifadesiyle, üzgünüm, iki eşit olması gerekiyor. Bir sonraki işleri tam gün. Yani zaman çerçevesi bugün ve tekrar eşitse, sadece bunu koyuyoruz. Sadece saatlik ya da sadece günlük yapacağınızı biliyorsanız, burada tüm bu değişkenlere ihtiyacınız yoktur. Bu sadece, bilirsiniz, saatlik yerine günlük yapmak istediğinize karar verirseniz, size seçenekler sunmak içindir. İşte ben gidiyorum. Biliyorsun, zaman başlangıç tarihi aynı şeye eşit. O halde elimizdekileri kopyalayalım. Ve burada bizimkinin yerine, bu günler olacak. Yani günler geriye bakacak ve müşteri limiti 200. Yani bu 200 gün geriye bakacak ve ilk günü 200 gün öncesinden alacak. Şimdi bunu saniyelere koymamız gerekiyor. Yani zaman başlangıç tarihleri, saniyenin bir tamsayıya eşit olduğunu söylememiz dışında, çünkü bunun zaman, başlangıç tarihi, nokta zaman damgasının bir tamsayı olmasına ihtiyacımız var ve bunu birazdan çalıştıracağız. Şimdi gidip bunu çalıştıralım ve sadece başlangıç saniyelerini yazdıralım. Bu nedenle, evet, eğer buraya gidersem ve sağ tıklarsam ve Func Price istemcilerini çalıştırırsam, işte bir tamsayı olarak, gerçek bir sayı olarak başlangıç tarihidir ve bu, gidip şamdanımıza takacağımız şeydir. O yüzden videoyu burada keseceğim. Ve bir sonraki videoda, burada ne çalıştırdığınıza bağlı olarak, fiyat verilerini gerçekten almak ve onu geçmiş 200 gün veya 200 saat döndürmek için bir fonksiyon yazacağız. Bizimkini kullanıyoruz çünkü zaman çerçevemiz 60'a ayarlı. Yapacağımız şey bu. Bu yüzden, eğer buraya geri dönersem, bunu size hatırlatmak için. Çerçeveyi yapılandırma dosyamızda görebilirsiniz, bunu 60'a ayarladık, bu yüzden bir sonraki videoda görüşürüz ve kısa süre içinde ele alacağız.