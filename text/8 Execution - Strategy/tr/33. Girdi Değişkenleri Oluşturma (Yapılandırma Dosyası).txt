Yani kurmamız gereken ilk pakete pipe it adı verilecek. Ve API belgelerine baktığınızda bunun Bybit'in sağladığı bir Python kütüphanesi olduğunu göreceksiniz. Şimdi, proje klasörünüzün adı ne olursa olsun kaydedilmiş bir strateji klasörüne kaydedilmiş bir ana dosyanız olmalıdır. Buna da sahip değilseniz, geri dönün ve önceki bölümde bunu ele aldığımız önceki videoyu izleyin. Veya yeni bir proje dosyasına giderek kendiniz oluşturun, bir Python dosyasını bir strateji klasörüne kaydedin. Yani şimdi yapacağımız şey bu. O halde buradaki terminalimize geçelim ve bunu yaptığınızda, otomatik olarak step port ortamınızda olmalısınız ve biz pip'e gideceğiz, boruyu kuracağız. Ve bunu yaptığımızda, çok uzun sürmemeli. Gördüğünüz gibi, bu şimdi gerçekleşti ve oldu. Yani artık özelimiz var. Bir sonraki yapmamız gereken şey burada yeni bir dosya oluşturmak. Strateji klasörüne sağ tıklayıp yeni Python dosyasına gideceğiz ve bu dosyayı yapılandırma stratejisi API pastası olarak adlandıracağız. Python dosyalarına ne ad verdiğiniz önemli değil, ancak okunabilir olmasının ve kullanımının mantıklı olmasının önemli olduğunu biliyorsunuz. Bu adı beğenmediyseniz, ona yapılandırma dosyası gibi başka bir ad verin. Ancak buna Yapılandırma Stratejisi API'si adını vermemin nedeni, API anahtarlarını, giriş değişkenlerini buraya koymamız ve örneğin, aynı zamanda bir yapılandırma API'sine sahip olacak başka bir yürütme klasörümüz olması. . Ve ben bu yapılandırma yürütme API'sini çağırıyorum. Sekmeleri düzenlerken yanlış klasörün üzerine yazmadığınızdan emin olmak için değil mi? Bu tür olaylar oluyor. Yani, bildiğiniz gibi, belgelerinizi buraya koyarak üç alıntıyı işaretliyoruz ve biz bu API belgelerini arayacağız. Ve yapmanız gereken şey, API belgeleri için önceki bir oturumda aldığımız bu bağlantıyı almak. Yani o linki oraya kopyalarsam, buraya yapıştırmış olurum. Bunu yapmamın nedeni hızlı başvuru için. Yani şimdi tarayıcıma geri dönersem, bilirsin, ne zaman istersen kolayca yapabilirim, gittim, o gece uyudum. Ertesi gün bunun üzerinde çalışıyorum. Google'a vs. gerek kalmadan çok hızlı bir şekilde belgelere kolayca ulaşabiliyorum. Yani yapacağımız ilk şey bu. Şimdi yapacağımız ikinci şey, bildiğiniz gibi API ithalatlarımızı yapmak. Yani yapacağımız ilk içe aktarma, hibritin içe aktarma HTP'sinden. Bu, API'ye http istekleri yapmamızı sağlayacak. Ve sonra, onlara config diyeceğim bazı konfigürasyon değişkenlerimiz var. Bunlar sadece strateji için girdi değişkenleridir. Buraya ilk koyacağım mod mod ve bizim modumuz test olarak adlandırılacak. Şimdi burada benim bunu inşa etme şeklim çok önemli ve bunu yapmak zorunda değilsin. Test modunuz ve üretim modunuz olması gerekmez. Tüm bunları testnet ortamında çalışmak için oluşturabilirsiniz. Ama mod koymamın sebebi benim için değil, senin için. Üretime başladığınızda, satın aldığınız ürünü oluşturup test ettikten ve gerçekten mutlu olduğunuzda, gerçekten iyi çalışıyor. Bunu metinden istediğiniz gibi değiştirebilir, üretimden tasarruf edebilirsiniz ve testnet API'sini kullanmaktan canlı, bilirsiniz, Bybit API'ye, testnet olmayan sürüme geçer ve her şey çalışmalıdır. Aynen öyle. Yani esasen yapacağı şey bu. Şimdi burada sizi uyaracağım. Bu kurs, gerçek parayla ticaret yapmakla ilgili değil, değil mi? Burada yürütme yapıyoruz ama bunu testnet ile yapıyoruz.Stratejinizi bir dizi farklı kriptoda iyi bir süre boyunca test ettiğinizden emin olmanız gerekir. Çok önemli. Ama bunu inşa edeceğiz, bu yüzden üretime geçmeniz çok kolay. Ve bu mod bunun için var. Yapacağımız bir sonraki şey, zaman çerçevesini koymak olacak. Aslında saatlik verilere odaklanacağım. Yani, bilirsiniz, Bybit API'sine baktığınızda, tarayıcımı burada açmama izin verin. Aslında farklı zaman dilimleri var. Yani, eğer buraya pazar verisi uç noktalarına gidersem ve sipariş defteri deyip aralığa bakarsam, bir tane üç beş 15, 16, bir tane 20 de MW olduğunu görebilirsiniz. O gün ay, 60. hafta 60 Dakikadır. . Bu yüzden bunu inşa edeceğiz. Yani 60 dakikalık bir zaman dilimi ve günlük bir zaman dilimi için çalışır. Böylece günlük mü yoksa 60 dakika mı yoksa 30 dakika mı gitmek istediğinizi seçebilirsiniz. Sadece aklınızda bulundurun, orada ne tür değişiklikler yaparsanız yapın, bunların yansımalarını anlamanız ve bunu kodlamanıza dahil ettiğinizden emin olmanız gerekir. Ama bunu benimle yaşarken anlayacaksın, biliyor musun? Bunların hepsi etkiler. Yani, bilirsiniz, bu yüzden bir test ağı yapıyoruz. Hatalar olur. Bu yüzden bunu yapmaya odaklanacağım, böylece bunu 60 veya günlük olarak yapabilirsiniz. Ve bunu, ikisi arasında dönebilmeniz için yapacağım. Diyelim ki yapmak istediniz. Biliyorsunuz, uzun vadede entegrasyon gel, ki bu genellikle böyle yapılır, ama aslında bunu ligimizde kısa vadede yapacağım çünkü bir nedenden dolayı kriptoda gerçekten ilginç görünüyor. Bu yüzden şimdi koduma geri döneceğim ve bunu yaptım. Zaman dilimini belirledim. Bir sonraki yapacağım şey müşteri limiti koymak ve bunun ne anlama geldiğini açıklayacağım. Dolayısıyla bunu bu talep sınırıyla yapmamızın nedeni, bunun API'ye çekmenizi istediğim maksimum geçmiş sayısının ne olduğunu söylemesidir. Biliyorsunuz, örneğin tarihi şamdanları alırken, buraya Klein'ı sorgulamak için inersem, burada bir yerde limiti olduğunu burada görebilirsiniz. İkilik bir limit bana son, bilirsiniz, iki öğeyi açık yüksek, düşük kapanış, hangi zaman dilimini koyarsam koyayım, yani zaman aslında bir tamsayı olarak girilir, tarih olarak değil, ama ben istiyorum son 200 çünkü bu aslında maksimum ve bunu burada görebilirsiniz. API'de size maksimum 200 olduğunu söylüyor. Ben de 200 alacağım. 200'den fazla istiyorsanız, API'yi iki kez çalıştırmanız ve verileri birleştirmeniz gerekir. Aslında başlangıçta bunu yaptım, ancak stratejide pek bir fark yaratmadığını gördüm, bu yüzden bu kursu fazla karmaşık hale getirmek istemedim. Ancak, yapabileceğiniz başka bir şey de, isterseniz size tonlarca tarih veren Binance'den verileri kolayca almak ve aynı coin'lerden birçoğuna sahip olmak. Orada söyleyebileceğim tek şey, işlem yaptığınız borsadaki verileri kullanmak her zaman daha iyidir. Yani yapacağımız şey bu. Oradaki 200 limitine koyacağız çünkü maksimum limiti kullanacağız. Ve burası da çok önemli. Demek istediğim, hepsi önemli, ama özellikle bu, bizim uygulamamız söz konusu olduğunda, bu Z-puanı ile ilgili. Yani girmeniz gereken puan, bilirsiniz, hareketli ortalama gibi çalışır. Ve bu hareketli ortalamanın penceresinin ne olduğunu koymanız gerekiyor, 21 gün 21 saat falan mı yapıyorsunuz? 21 filmini ve blackjack'i sevdiğim için yirmi bir kullanıyorum. 21 kullanmam için başka bir sebep yok. 12 kullanabilirsiniz, 10 kullanabilirsiniz. Biliyorsunuz, sayı ne kadar küçükse, Z puanı stratejiniz o kadar agresif olur, sayının o kadar büyük olduğunu bilirsiniz. daha az agresif olacak, ancak belki de daha uzun zaman çerçevesi açısından daha doğru. Böylece bunu farklı Z-skor pencereleriyle çalıştırmayı deneyebilirsiniz ve burada yapmanız gereken tek şey bu yapılandırma dosyasına gitmek. Şimdi bu numarayı değiştirin, yeniden çalıştırın, bilirsiniz, kod entegrasyonu, vb. ve her şeyi sizin için farklı bir pencerede yapacak. Bu yüzden burada olması gerçekten faydalı. Burası, canlı API'nizi koyabileceğiniz yerdir. Bu yüzden burada canlı API bilgilerimizi koyacağım, böylece bu API anahtarı olabilir. Bu API anahtarına iki katlı daire diyelim ve şu anda bunu eşit derecede boş bırakacağım çünkü bu kursu yapan hiç kimsenin bunu, bilirsiniz, bu sizin kendi stratejiniz olması gerektiği anlamına gelmesine zorlamak istemiyorum. Bu kurs eğitim içindir. Girişte zaten bahsettiğimiz gibi, buraya gidip ticaret yaparsanız bir sürü kar elde edeceğinizi söylemek için burada değiliz. VİDEO VİDEO Bilirsiniz, gidip bunu doğrudan ana ağa bağlamayın. Herhangi bir stratejiyi test etmeniz gerekir. Bahsettiğimiz gibi bir testnet parasıyla test etmeniz gerekiyor.Ama bunu sizin için buraya koyacağım, sadece bildiğiniz zaman, üretime geçmeye hazır olduğunuz zaman için. Ve ihtiyacımız olan diğer şey de API sırrı. Ve yine, bunu sizin için boş bırakacağım. Yani bir kez hazır olduğunuzda, bunlar ne ise onu takabilir ve gidebilirsiniz. Yani burada yapacağımız bir sonraki şey, testnet API'sini koyacağız. Şimdi bu şu an için çok önemli çünkü onsuz hiçbir şey yapamayız. Yani, evet, API anahtarı test ağını koyacağız ve ben sadece, bilirsiniz, elimdeki API anahtarına gireceğim ve benim API anahtarımı kullanmamalısınız. Bu kursu yaptığın zaman zaten yapamayacaksın, ama sakın kullanma. Biliyorsunuz, kendi API anahtarınızı nasıl oluşturacağınızı bilmiyorsunuz, o yüzden bunu yapın. Ve burada da sır olarak bir tane koyacağız ve kopyalamamız gerekiyor. API sırrımı oraya kopyalayacağım, tıpkı söylediğimiz gibi, bilirsiniz, bunun bir kopyasını almayı ve daha sonrası için bir not defterine ya da başka bir yere koymayı unutmayın. Pekala, şimdi bunu yapıyoruz. O zaman burada, esasen şunu söylemeliyiz, Peki, eğer bunu yapacaksak, hangi API'yi kullanacağız? O halde bu seçilmiş API'yi ve kullanacağımız API'yi çağıralım. Yani bu API anahtarı olacak. Bunların hepsi seçilecek. API anahtarı API anahtarı test ağına eşit olacak. Ve eğer bu sadece mod teste eşitse ve burada büyük ve küçük harf önemliyse. Testin başka yerlerdekiyle tamamen aynı göründüğünden emin olun. API ana ağ mı? Ve bunun anlamı, bizim, bilirsiniz, bizim seçeceğimizdir. API anahtarı olarak Testnet API anahtarı. Bu mod test edilirse, aksi takdirde üretim olanını yapacak ve buradaki sır ile aynı şey. Bu yüzden API sırrı ve API sırları yapıyoruz. Bunu burada ve burada değiştiriyorum. Şimdiye kadar API sırrı, çok iyi. Şimdi ihtiyacımız olan şey, URL'yi de seçmemiz gerekiyor. Yani burada şunu söyleyeceğiz, bilirsiniz, URL'nizi şu şekilde ve şu şekilde seçtiniz. API URL'si de belgelerdeki API URL'sine eşit olacaktır. Yani buraya ve kimlik doğrulamaya gidersem, burada URL'nin olduğunu görebilirsiniz. Hayır, şu anda web soketleri yapmıyoruz. Yani testnet için, Become'ın bu API Dash testnetini kullanıyor olmalısınız. Böylece, zaten bir not defterine kopyalamış olabileceğinizi kopyalayabilir ve öylece koyabilirsiniz. Ancak mod teste eşitse bu yine olur. Aksi takdirde, bu ikisinden herhangi biri olabilecek üretim API URL'sini girmemiz gerekir. Bu yüzden bunu buraya alacağım ve üretim modunda olsaydık bunu kullanacaktı. Son olarak, yapmamız gereken bir oturum oluşturmak ve oturum, tüm API'ye erişeceğimiz şeydir. Biliyorsun, ne istersek seans noktasına gideceğiz. Ve bunu burada yapacağım. İşte burada şunu çekeceğim, bilirsiniz, oturum aktivasyonu ve bu oturum eşittir TDP olacak, tıpkı burada özel ithal TDP'den yaptığımız gibi. Şimdi bunu burada kullanıyoruz ve bu bizim API URL'mizi alacak. Bu nedenle, yukarıdan, herhangi bir hata yapmadığımızdan emin olmak için şimdi yapılan yapılandırma dosyamız budur. Bu sadece, bilirsiniz, play'e basın ve merhaba yazdırıyor ve her şey çalışıyor gibi görünüyor, ancak oradaki yapılandırma dosyasına girmedi. Bir dakika içinde yapacağım şey, yapılandırma dosyasını içe aktarmak, ancak yine de, şu anda kodu atması gereken herhangi bir yazım hatası veya herhangi bir şey yok. Ve şimdi web soketine bağlanacağımız bir sonraki videoya geçelim.