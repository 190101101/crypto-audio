Şimdi işler çok ilginçleşmeye başlıyor, ana Port Pi dosyamıza gideceğiz ve bu baskıdan kurtulacağız, merhaba ve gerçek botlarımızı oluşturmaya başlayacağız. Öyleyse devam edelim ve şimdi yapalım. Yani yapmak istediğim ilk şey, bunun gibi bazı belge teknolojileri koyacağım ve bu strateji kodunu arayacağım çünkü bu aslında stratejimizi çalıştıracak olan kod. Ve tipik bir şekilde, burada söyleyeceğiz, eğer isim altçizgi, altçizgi, ana altçizgiye eşitse, kodumuzun her bir adımını burada uygulayacağız ve ilk adımımızı gerçekleştireceğiz. yapacağım. Bu yüzden buraya koyacağız. Adım bir. Ve içinizde Python'da Uniswap ve Poloniex kursuyla üçgen arbitraj yapanlarınız için, buradaki adımları gerçekleştirme metodolojime çok aşina olacaksınız. Burada neler olup bittiğini takip etmeyi çok kolaylaştırıyor. Sembollerin listesini alacağız. Ve bunun nereden geldiğini merak ediyorsanız, yine burada planımızı uyguluyorum. Biliyorsun, takas edilebilir sembolleri al. Yani şu anda burada yaptığımız şey bu. Bunu yapmak için şimdi sembollerin listesini alacağız. Ve şimdilik, burada kodumuz yok. Bu yüzden sadece POS koyacağım. Böylece hata ortadan kalkar. Burada yapacağım ilk şey, panda kullanacağımız için. Can sıkıcı bir hata gelmeye devam edecek. Örneğin, buraya, bilirsiniz, merhaba yazdırırsam ve sonra buraya, terminalime pip yüklemeye gidersem, çünkü bu kurs için pandalarla tanışacağız. Şimdi, pandaların ne olduğunun farkında değilseniz veya aşırı derecede farkında değilseniz, Python'da verileri bir tabloya yapılandırmayı ve sorgulamayı çok kolaylaştıran bir kitaplıktır. Excel versiyonu gibi. Excel'in Python versiyonu gibi. Ben her zaman kullanırım. Kesinlikle seviyorum. Ve bir kez panda kullanmaya başladığınızda, kullanmamak gerçekten çok zor. Yani, bilirsiniz, bu yüklü pandalar. Ama örneğin buraya gidersem ve pandaları PD olarak içe aktarırsam, yani pandalar budur. Pandalarla kullanacağımız kısaltma bu. Ve burada Main'e sağ tıklayıp koşmaya başlıyorum. Bir hata uyarısı getirmesi gerekir ki bu olmadı, ki bu oldukça komik, çünkü bazılarınız için olabilir ve daha önce üzerinde çalıştığım botun son sürümünde yapıyordu. Yani yine de yapacağım şey, hata ortaya çıkmamış olsa da, olabilir. Bazılarınız için buraya bir uyarı aktaracağım. Yani burada, ben uyarıları içe aktaracağım ve bunun şimdilik neden ve ne olduğunu açıklayacağım. Ve gideceğiz. Uyarılar basit filtreyi işaretler. Ve sonra burada, bir eylem koyacağız ve bu eylem yok saymaya eşit olacak. Bu da, gelecek uyarıya eşit olan kategoriye uyan tüm uyarıları görmezden geleceğimiz anlamına gelir. Ve bu hatayı almaya başlarsanız çok faydalı olacaktır çünkü bu, pandalardan gelecek herhangi bir uyarının ve bu uyarıların gelmesi anlamına gelir, bu, kodunuzda bir sorun olduğu anlamına gelmez. Bu, pandaların değişecek bir şey kullandığı ve sizi bu konuda uyardığı anlamına geliyor. Yani tam ortaya çıktığında gelecek için bir uyarısı var, büyük bir kırmızıyla geliyor, bilirsiniz, büyük bir kırmızı hatayla. Kodunuzda bir sorun olduğunu düşünmenizi sağlar ve sonra olmaz. Bu yüzden, kodumuz uğruna gelecekteki uyarıların yok sayıldığından emin olacağız. Sadece gidip bunun üzerinde oynat'a basarsam, sorun değil. Bu iş. Sorun yok. Oraya gidiyoruz.Peki neyi doğru yapmamız gerekiyor? Burada strateji kodumuz var ve sembollerin listesini almamız gerekiyor. Ve şimdi ne yapacağız, sembol ya da bazı tepkiler adında bir değişken yaratacağız. Ve bu, işleyen bir şeye cevap olacak. Kod oluşturacağız, takas edilebilir semboller alacağız. Bunun gibi ve henüz bu işlevi inşa etmedik. Yani, bilirsiniz, şu anda PI şikayet ediyor, ki olması gerektiği gibi. O halde burada yapacağımız şey go, yani file ve burada bir python dosyası oluşturacağız. Ve aslında, bunun stratejilerde oluşturulduğundan emin olmak istiyoruz, yeni bir Python dosyası ve biz buna, bilirsiniz, func get sembolleri diyeceğiz. Genelde yapmayı sevdiğim şey özür dilemek ve bu bir python dosyası. Genellikle yapmayı sevdiğim şey, işlevler oluşturmak ve onları func olarak adlandırmaktır ve bunları farklı işlev türlerinde gruplandıracağım. Bu yüzden, örneğin, ticareti tek bir işlev kümesinde yürüten tüm kodumu içeren bir dosyam olacak. Ve buna belki func yürütme veya fiyat alan bir şey diyeceğim. Bu yüzden bu dosyaları bu şekilde sınıflandırıyorum. Sonra onları içeri aktarıyorum ve bu kodumuzu temiz tutmanın çok ama çok kullanışlı bir yolu. Bu yüzden hemen şimdi bu kodu yazacağız. Bunu yapmamızın yolu şudur, bilirsiniz, eğer bir func get sembolleri alırsak ve sonra yapmamız gereken şey oturumlarımızı girmektir. Bu yüzden, buradaki yapılandırma dosyamızı hatırlıyorsanız, bu oturumumuz var. API'ye bu şekilde mi erişeceğiz? Ve böylece şimdi ilginçleşiyor. Bu yüzden, yapılandırma stratejisi API'mizden yola çıkacağız, bilirsiniz, içe aktarma temelde içe aktarma oturumudur. Ve burada, bunu yapan fonksiyonların bu dosyadaki sadece bir fonksiyon olacağını ve bunun, bilirsiniz, takas edilebilir semboller alacağını yorumlayacağım. Takas edilebilir bir kelime olup olmadığından bile emin değilim, ama bu bir Sean izmi ve işe yarayacak. Ve sonra burada bir fonksiyon tanımlayacağız, bu da bildiğiniz gibi takas edilebilir takas edilebilir semboller elde etmek. Ve bu içinde hiçbir şey almayacak. Ama buraya bakarsam, bilirsiniz, işte burada, takas edilebilir semboller elde edin. Şimdi gidip söylersem, bilirsiniz, bundan func üzgünüm, func get symbol, import, get tradeable semboller oldu. Ve şimdi o dönem ortadan kalktı, artık altı çizilmiyor, değil mi? Yani şimdi bu işlevi içe aktardık. Ama şu anda fonksiyonda bir hata var. Ve buradaki kırmızı çizgiden dolayı görebiliyorum, gittikçe daha fazla kodlamaya devam ettikçe, aynı şeyler hakkında yorum yapmaya devam etmeyeceğim. Bu sadece, kodlamada oldukça yeni olanlarınızın, aradığımı ve burada ne olduğunu anlamalarına yardımcı olmak içindir. Bu yüzden dizi olarak da bilinen boş bir liste oluşturacağız. Burada boş bir liste oluşturacağız. Bu nedenle, tüm değişkeni bildiriyor. Ve burada bulunan ve nokta sorgu sembolü olan oturumu çağırarak tüm sembolleri alacağız. Ve bunu nasıl aldığımdan emin değilseniz, API belgelerinden. Örneğin, şimdi gidip bunu yazdıracak olsaydım, şimdi sadece sembolleri yazdıralım ve bu kodu çalıştıralım, ne olduğuna bakın. Sadece koş. İşte gidiyorsun. Yani çalıştırıldı. Web soketi gibi değil. Sadece bir sürü veri akışı yapmıyoruz, değil mi? Bir dinlenme API'si veya bir dinlenme API'si olarak adlandırıldığında çalıştırılır. Ve bana bu listeyi veriyor. Ve sağa kaydırırsanız, tüm bu sembolleri burada görebilirsiniz, aslında. Ve bu oldukça ilginç. Burada aklımızda tutmamız gereken birkaç şey var. Yani her şeyden önce, beklememiz gereken bir geri dönüş mesajı var ve bu geri dönüş mesajı, Tamam demek anlamına geliyor. Ve sonra sonuçlar içinde, temelde, bilirsiniz, buradan gelen bir sürü şey var. Yani bu aslında yapabileceğimiz bir şey, bilirsiniz, eğer dönüş mesajı sembollerde ise diyebiliriz. Koyu tuşlar, yani sembol tuşları temelde bu sözlüğe uyan her şeydir. Bunun bir sözlük olduğunu görebilirsiniz, bu yüzden bu anahtarlara sahibiz, bir anahtar dönüş kodu, bir dönüş mesajı vb. Ve sonra buradaki bu sözlükteki bu anahtarlar, bir ad takma adı varsa, anahtarlardaki mesajları döndürür, bu harika. Ve ayrıca eğer semboller ve sonra, bilirsiniz, dönüş mesajı eşittir, çünkü o zaman kodun işe yaradığını biliyoruz, o zaman esasen sembolleri elde edebiliriz, ki yine, burada bu sembol değişkenini geçersiz kılacağım. . Sadece diyeceğim, bakın, semboller buna eşittir. Burada nesneleri simgeleyen simgeler. Ve sonuç budur. Dolayısıyla bu sonuçlara girmemiz gerekiyor. İşte tüm semboller. İşte sonuç anahtarı. Yani buna bakacağız. Ve temel olarak, tüm semboller noktalardır. Yani bunlar sembol. Şimdi gidersek ve tekrar sembolleri basarsam, koşarım ki şimdi göreceksiniz ki, sonuçlar gibi diğer şeylere sahip değiliz, vb. Burada doğrudan bunu kestik. Şimdi yapmamız gereken aslında bunun üzerinden geçmek.Sembollerde sembol diyeceğiz, aşağıdakileri yapacağız ve sembolün para biriminden alıntı yapıp yapmadığını söyleyeceğiz çünkü sadece bize borcumuz olan sembollerle uğraştığımızdan emin olmamız gerekiyor. biz. Bu çok önemli bir şey. Ve şamandıra, çünkü yapmak istediğimiz şey bunun sembolsüz olarak geri gelmesini sağlamak. Ve bu onun ücretini ödemek. Burada, ayaklarını dikleştirmesini sağlayın ve bu, eğer piyasa yapıcıysanız, işte bu, işte bir ücret. İşte bir ücret. Bunun sıfırdan az olduğundan emin olmak istiyoruz. Yani temelde, bunun sıfırdan az olması gerekiyor. Bunun nedeni, yalnızca bu sayı sıfırdan büyükse bize indirim sağlayan madeni paralarla ticaret yapmak istememizdir. Neden bu parayı takas etmek istiyorum? Çünkü iyi bir stratejiniz varsa, muhtemelen limitli emirler vermek istersiniz. Daha önce tartıştığımız gibi, markanın sıfırdan küçük olduğundan ve buradaki sembolün durum olduğundan emin olun. Yani ilerlerseniz, durumu görmelisiniz. Doğru ticaret yapıyorsunuz, bu yüzden ticarete eşit olması gerekiyor. Ve bu önemli olacak çünkü takas edilemeyen tavsiye edilen paraları almak istemiyoruz. Öyleyse durum buysa, onu sembol listemize ekleyeceğiz. Yani en basit dolar. Ve bu bir sembol olacak. Ve işte başlıyoruz. Şimdi tüm sembollerimiz yerine bir liste yazdıralım ve ben burada play'e basacağım. Yani neredeyse aynı görünüyor, ancak bir fark var. Bu liste artık yalnızca beklediğimiz ücretli olanları içeriyor ve takas edilebilir ve bu bir UCSD'nin seçeneği. Bu yüzden az önce bir ton filtreleme yaptık. Artık takas edilebilen her coin'e sahibiz. Yani onu durdurmak için harika bir yer. Ve şimdi burada öğretici serinin bir sonraki bölümüne geçiyoruz, aslında yapacağımız şey, bu semboller için bir fiyat geçmişi oluşturmaya ve kaydetmeye başlayacağız.