Sizi bilmem ama benim için bu çok hızlı gerçekleşti, bu yüzden tüm bu fiyatların bir araya toplandığını ve bir JSON dosyasına başarıyla kaydedildiğini görebiliriz. Ve betiğin artık çalışmayı bitirdiğini görebilirsiniz. Yani burada depolanmayan 122 öğe, bu yüz yirmi iki öğenin depolanmadığı anlamına gelmiyor. Bu sadece 122'ye ulaştığında, depolanmayan bir iki üç dört öğe olduğu anlamına gelir. Bunu günlük verilerle yapıyorsanız, Bybit'te 200 günlük veriye sahip olmadıkları için depolanmayan çok daha fazlası olduğunu göreceksiniz. Ve unutmayın, biz hariç tutuyoruz, bilirsiniz, o fiyat geçmişine sahip olmayan tüm kriptoları hariç tutuyoruz. Şimdi bu videoda yapmak istediğim şey, gitmeden önce ve aslında şimdi entegrasyonu hesaplayın ve hangi çiftlerin entegre olduğunu ve hangilerinin olmadığını bulun. Aslında size bu verinin neye benzediğini çok daha okunabilir bir biçimde göstermek istiyorum. Şimdi, Firefox'unuz yoksa, Firefox'u indirin çünkü benim için Firefox, Jason verilerine bakmanın en iyi yolu. Aslında, Firefox'u bunun için kullanıyorum. Ve şimdi yapacağım şey aslında size göstermek, bilirsiniz, klasörünüzde, burada görmeniz gereken, bu alt çizgi fiyat listeniz var. Biliyor musun Dot Jason, aslında bunu burada da bilgisayar klasöründe görebilirsin, değil mi? Yani yaptığınız şey, o Jason dosyasını sürüklemek, buraya Firefox'un en üstüne sürüklemek ve onu yükleyecektir. Diğer sekmeyi kapatabilirsiniz. Bir web sayfası olarak yükleyecektir. Bu gerçekten kullanışlı, bir numara. Şimdi buradaki tüm paralara bak, değil mi? Bu dosya, değil mi? Bu, az önce oluşturduğunuz dosyadır. Bunlardan birini açarsam, bunu görebilirsin. 200 olmalı. Buyrun. Yüz doksan dokuz artı sıfır sıfır bir olarak sayılır. Yani bu iki yüz satırlık veri. Ve eğer o açıklığı kırarsam, her birinin açık yüksek, alçak kapanışı olur. İşte yine burada. Bilirsiniz, açık, yüksek, düşük, yakın ve bilirsiniz, süre 60, başlangıç ​​tarihi vb. Yani tüm bu bilgiler şu anda tam olarak ihtiyacımız olan şey. Eğer çökersem, her kripto için burada olması EOS'tur. O, bilirsiniz, Chainlink, SushiSwap, bilirsiniz, hepsi burada. Aslında, daha önce gelişirken Sol ile çok zaman geçirdim. Yani bu, bilirsiniz, bu oldukça ilginç. Tüm bu verileri şimdi sizin için çok kolay bir şekilde kaydettiniz. Muhtemelen merak ediyorsundur, harika. Bu harika. Nasıl kullanırız? Yani bu bize CO entegrasyon hesaplamamızı, tüm bu fiyat geçmişini pişirmemize neyin izin vereceğini söyleyecek ve şimdi bu veriler arasında dolaşabiliriz çünkü her zaman API'yi aramak zorunda kalmadan kaydettik. doğru, tüm bu kod limitleri hakkında endişelenmenize gerek kalmadan. Şimdi bu dosyayı kaydettik. Artık bu dosyayla istediğimizi yapabiliriz ve bu dosyaya bir sürü çağrı ve hesaplama yapabiliriz, bu dosyaya Bybit ile API vb. Bu harika. Onu kurtardık. Buraya kadar geldiyseniz, bilirsiniz, aferin. Eğer mücadele ediyorsan, bir şey işe yaramadıysa, sen de geri dön. Kodu kontrol edin çünkü tüm kodu kaynaklar klasörüne kaydettim. Yani bu kodun tamamına erişiminiz olmalı. Sizinkine göre kodu kontrol edin. Biliyorsun, yaptığım son kursta. Çoğu zaman insanlar istedikleri soruyu sorarlardı, Ah, bu işe yaramıyor, ama aslında bunun nedeni noktalı virgül gibi bir şeyin eksik olmasıydı, bilirsiniz, kodu kontrol edin, çıkan sorunları okuyun, Google onlara. Onları anlamıyorsanız, çalışmayan şeyler programlamanın en büyük parçasıdır. Bunu daha önce yaptığımı unutmayın, bu yüzden her şeyin bu kadar hızlı çalışıyor gibi görünmesinin nedeni daha önce inşa etmiş olmam, değil mi? Yani fark burada. Bu dosyaya sahipseniz, takip ettiniz veya takip ettiyseniz ve sadece neler olduğunu anladıysanız, gerçekten çok iyi gidiyorsunuz. Öyleyse devam et. Bir sonraki videoda CO entegrasyon hesaplamasıyla başlayacağız.