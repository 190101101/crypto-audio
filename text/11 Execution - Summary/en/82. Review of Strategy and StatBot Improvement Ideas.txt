So well done, you've got so far, you've got right to the end of the course. And I think it would make a lot of sense, don't you? If we sat down together and we discussed, how could we make the sport better? How could we build a bot where it's the king of all bots or the queen of all bots? And it beats everything and it makes a lot of lots of money? And how can we go and develop something like that? Well, I've got some thoughts I wanted to share with you. And you're welcome as well to share your thoughts with me as well. So let's talk about, first of all, some of the improvements in the first three are going to be based around safety. So, you know, first thing is first, and you saw at the beginning of this course, we went through, you know, a lot of the principles around protecting capital, et cetera. The first thing is, you know, how do we manage our stocks more intelligently and safely? How can we do that? Where should stop losses be placed? First of all, if we if we're using stop losses, which, as I've said, always recommend you put something in, even if it's 50 percent away, you put something in. But you know, how do we manage the code around stopping us out of a trade? Do we say if we've lost two percent, stop trading, you know, and deploy money management techniques? So if you know about money management in trading, you know there's different techniques for how you enter into size and exit out with size. And even then, do you do that with limit orders or market orders? Right. So these are considerations to take into account. And that in itself is an area of research. You could probably spend four or five hours on YouTube alone finding out about money management techniques. But at the end of the day, you don't know what works until you try it, and it means you are consistently over the law of large numbers for you to categorically say it works right and that goes for all of this. The next thing is, you know, more code fail safes and checks. So you noticed on the first part, unexpectedly, I got a new error that popped up, which was that window time window issue, which, you know, I'll be getting resolved with Bybit. But, you know, regardless of what's causing that issue, et cetera, the fact is problems will happen. You will have an unknown issue, hit your board. And I'm really glad that issue came up because it shows you the truth of how these things really work. You know, you will have an issue come up. There's not much explanation for online and you know, that means reaching out to people and trying to get it resolved, et cetera. That's going to happen. But the point is that the code is going to fail, right? It's going to go wrong. So how do you make sure and your API calls that you handle something if it goes wrong? Do you need to build a function that checks all your positions if something goes wrong and then does something about it or sends you, you know, an email? So here we say, you know you're running the cloud and have phone notifications or email notifications. It's actually quite easy with Python to have Google Mail send you an email, you know, triggered based on anything you want. It's actually pretty easy to set that up, so you could have an email, you could have email notifications switched on on your phone, and you know that will tell you if something didn't work. But even then, everything can stop working. So if you're running a bot, you should be checking that bot anyway as a human right? You should be checking it anyway. So that's the safety stuff. But you know, next, what I want to talk about is performance, right? How do we actually get our board to perform better? Well, you know, you would have heard me mention in one of the previous videos that getting limit orders filled clearly for me in my, you know, understanding from where I'm coming from seems to really be the name of the game. And, you know, market orders. The problem with the market order is as such, right? So if we highlight our market orders here as you, you know, you've seen before because we've spoken in the trading principles about market orders, but you know, here you've got your asks and then, you know, over here, for example, will draw as well your bids, right? Oh, sorry. So we'll keep that as your bids and then we'll draw this one here as your asks. OK. And so let's just make that rate again, because it just makes it much more intuitive to understand what's going on. And just in case you don't realize this, or if anyone watching this doesn't realize this, the issue here is if we're placing a market order, so we're buying right, we're eating into this order book. And the more liquidity we're eating up, the worse the price beginning because he has the best price in the ask. Is the next best price, the next best price, the next best price and the price just gets worse. So when you placing a market order on like an illiquid crypto, ouch. Right? And so this is a buy order. So I'm going to put this in green. And you know, the same is true here when you know where you're placing a sell order. So the same thing is true. If you're placing a sell order and you're selling into the bid, you're getting a worse and worse and worse and worse price the more liquidity you eat up. But when you limit orders filled, not only are you. Getting the best available price, depending on where what price you positioned, your limit order between the bid and ask spread or within the bidding of spread range. You know, not only are you getting that market making rebate, but you also getting the best price and that, you know, and as I said, the market making rebate. So clearly that in itself gives you an edge, which we've discussed before. So my hypothesis, which I'm going to be looking to do some work on and again, I will post this on the channel is around, you know, can we use reinforcement learning to predict where and when you know where and when these bidding ask orders should get filled? You know, is the price and we're talking my HFT high frequency trading micro timeframes. Is the price going to get filled, right? Is it going to move to the bid? Is it going to move to the ask? If so, you know, likely by how much? So I think a combination of having a model with proven predictive capabilities on that and this would be very useful and you would trade that on a specific pair. And you know, you traded with a lot of data and actually reinforcement learning or machine learning for the order book is a big data problem. It's very easy to build the tests, as you can see on crypto is it's, you know, we do machine learning with no code. You literally plug in data or download data and run it through model. You don't even need to code it. But at the end of the day, when you're dealing with an order book, there's no way you're going to get that data. You have to download it yourself. If the query the API in store that data. But hey, this is what I do. This is what I enjoy doing. The next thing is, you know, ranking the pairs by liquidity, right? So what pairs offer the best liquidity? It shouldn't just be how how often does that pair cross the Xero on the spread? But how much money is there in the order book? More money is the easier you're going to get filled and the more money you can trade, depending on your capital side size that might or your amounts of capital that may or may not be a good idea. But, you know, liquidity for statistical arbitrage is actually an advantage for other forms of arbitrage. Lack of liquidity is an advantage here. It's a disadvantage. And that's based on my experience. That's not based on, you know, any literature out there. And then, you know, as we mentioned before, adding further money management principles. So I'm repeating myself there. But then finally, strategy, right? We can get rid of this white box. Let's look at our strategy more research with automated back testing and metrics. So one of the things I'll be doing on the crypto is its platform. As a lesson I've learned from building this bot is I'm going to develop, you know, more tooling for people around thinking of buttons so that it back tests different strategies for you and you don't have to mess around in excel. Right. So that's something that I'm going to spend time and energy and effort doing because, you know, I think it's worth it. I want to be able to click a button and go, right, this performed this well over this time period, and it worked best with this money management strategy, et cetera. And because it's pairs trading, it's very difficult for you to use a standard backtesting because a crypto is we have a standard back testing tool. It works really well. It's really cool, but it's difficult to do it with pairs trading because you have to do, you know, one strategy than the other, then add the results together to know, you know, to know how it did. But really, here I just want one size fits all. But for yourself, you know, you could be writing Python code. So why not build, you know, automated back testing around your strategy, right? And that'll help you pick the better path. The other thing is more testing on many more crypto pairs with different strategies. So once you've got this up and running, you know what? What stops you setting up like 20 different bots to run every hour and execute or run every day, right? Daily time frames in stocks, I believe, work better for integration than hourly ones. So it might be the same for crypto, although hourly looks really interesting to me in crypto. But you know, why not just have loads of pairs trade at the same time? And that way you can see and you can write an entire API call that, you know, gives you the pencil and reports out metrics for all of those pairs. So there's lots of things you can do that. And finally, keep learning. Never stop learning. Right. And the reason why I say that is because the market changes all the time. And you know, the reality is you'll get to a place online and this is kind of where I go to online. You get to a place online where you just you just can't get the info anymore, right, unless you're working with traders. You just don't know. So all you have are your ideas. And that's again, you know, that's what crypto is. It's it's about. It's about, you know, very small niche of people just like myself. It's not about a lot of people. I'm telling, you know, that that channel is very small, right? It's been going for five years. It's got like 8000 subscribers or something at the time of recording this video. Right. That channel has been going five years and it's a small community. But you know, I think what happens is traders get to this place. How to get to this place where they realize that the game is rigged and they realize that you can make money trading, but it's extremely difficult to actually do it and do it over the long term. And this is why I refused, by the way, to buy any book that any person has ever built. I'll never buy a bot. I used to, you know, when I was in my early 20s, I was buying bots and testing out different expert advisors they call them. What a waste of time and money. Don't waste your money. Don't do it. That would be, you know, one wreck. If there's one recommendation I could legally give you here, I would say, don't go buying bots. You know, make sure that you understand what's under the hood and what's going on. So keep learning. And that's, you know, that's why I developed the platform is because, you know, it's my way of exploring and showing where I'm finding edge and then giving other people the tooling to do the same. You know, so from your side, you know, keep learning test strategies out, you know, get an idea and test it. You know, you now know Python, you can do it right. You don't need to be on crypto is it's you can write the Python code. The only reason people use crypto is it's, you know, Python is because it saves and time, you know, to do basic tests and then they'll go and use Python to then, you know, go deeper into that strategy. So it's very useful for, you know, saving, you know, hours and days of research. But then when you need to get serious about a strategy i.e., you know, statistical arbitrage, then you need to code that yourself. And now you know how right now you know how. So keep learning. So, you know, just to summarize here, I will be posting updates on, you know, statistical arbitrage. This course is still very fresh, of course, on bot progress, etc. I will be posting that on the channel. You don't have to follow the channel, but if you do want to check in there every now and then, you can. Anything major that needs to be updated here for this course. I will make sure that I'm posting that on Udemy as well and any bonus scripts that I want to include here. I'll put that in and, you know, I'll make sure that I put that, you know, with some kind of notice in the videos, etc. So you can see, you know, that that was in addition. VIDEO. So, you know, I will make sure I keep on top of that. Truthfully, speaking, usually once I've finished one project, I move into the next. My next project is to develop backtesting for statistical arbitrage. That's the next thing I'm going to be working on. So I won't really be focused on the bot per se right now. But once you've got that backtesting fine tune, then I will be deploying robots. You know, that's my plan from here. Now finally, you know, what we're going to do is we're going to move into one last video and that last video is just the chance for me to thank you, to congratulate you and for us to go ahead and move on in our journey to finding an edge in the markets. See you over there.